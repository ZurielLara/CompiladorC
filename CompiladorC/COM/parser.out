Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration_list declaration
Rule 3     declaration_list -> declaration
Rule 4     declaration -> var_declaration
Rule 5     declaration -> fun_declaration
Rule 6     declaration -> HASH INCLUDE LESS ID GREATER
Rule 7     declaration -> USING NAMESPACE STD SEMICOLON
Rule 8     var_declaration -> type_specifier ID SEMICOLON
Rule 9     var_declaration -> type_specifier ID COMMA ID SEMICOLON
Rule 10    var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON
Rule 11    var_declaration -> type_specifier ID EQUAL var SEMICOLON
Rule 12    var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON
Rule 13    type_specifier -> INT
Rule 14    type_specifier -> VOID
Rule 15    type_specifier -> STRING
Rule 16    fun_declaration -> type_specifier ID LPAREN params RPAREN compount_stmt
Rule 17    params -> param_list
Rule 18    params -> VOID
Rule 19    param_list -> param_list COMMA param
Rule 20    param_list -> param
Rule 21    param_list -> empty
Rule 22    param -> type_specifier ID
Rule 23    param -> type_specifier ID LBRACKET RBRACKET
Rule 24    compount_stmt -> LBLOCK local_declarations statement_list RBLOCK
Rule 25    local_declarations -> local_declarations var_declaration
Rule 26    local_declarations -> empty
Rule 27    statement_list -> statement_list statement
Rule 28    statement_list -> empty
Rule 29    statement -> expression_stmt
Rule 30    statement -> compount_stmt
Rule 31    statement -> selection_stmt
Rule 32    statement -> iteration_stmt
Rule 33    statement -> return_stmt
Rule 34    expression_stmt -> expression SEMICOLON
Rule 35    expression_stmt -> SEMICOLON
Rule 36    expression_stmt -> COUT LGREATER QUOTES ID QUOTES SEMICOLON
Rule 37    expression_stmt -> COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON
Rule 38    expression_stmt -> COUT LGREATER STRING SEMICOLON
Rule 39    expression_stmt -> COUT LGREATER STRING LGREATER ENDL SEMICOLON
Rule 40    expression_stmt -> COUT LGREATER var SEMICOLON
Rule 41    expression_stmt -> COUT LGREATER var LGREATER ENDL SEMICOLON
Rule 42    expression_stmt -> COUT LGREATER var LGREATER var SEMICOLON
Rule 43    expression_stmt -> COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON
Rule 44    expression_stmt -> CIN RGREATER var SEMICOLON
Rule 45    expression_stmt -> CIN RGREATER var RGREATER var SEMICOLON
Rule 46    expression_stmt -> CIN POINT GET LPAREN RPAREN SEMICOLON
Rule 47    expression_stmt -> ID PLUSPLUS
Rule 48    expression_stmt -> PLUSPLUS ID
Rule 49    expression_stmt -> ID MINUSMINUS
Rule 50    expression_stmt -> MINUSMINUS ID
Rule 51    selection_stmt -> IF LPAREN expression RPAREN statement
Rule 52    selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement
Rule 53    iteration_stmt -> WHILE LPAREN expression RPAREN statement
Rule 54    iteration_stmt -> <empty>
Rule 55    iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement
Rule 56    iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
Rule 57    iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
Rule 58    iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
Rule 59    iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement
Rule 60    return_stmt -> RETURN SEMICOLON
Rule 61    return_stmt -> RETURN expression SEMICOLON
Rule 62    expression -> var EQUAL expression
Rule 63    expression -> simple_expression
Rule 64    var -> ID
Rule 65    var -> ID LBRACKET expression RBRACKET
Rule 66    simple_expression -> additive_expression relop additive_expression
Rule 67    simple_expression -> additive_expression
Rule 68    relop -> LESS
Rule 69    relop -> LESSEQUAL
Rule 70    relop -> GREATER
Rule 71    relop -> GREATEREQUAL
Rule 72    relop -> DEQUAL
Rule 73    relop -> DISTINT
Rule 74    relop -> QUOTES
Rule 75    additive_expression -> additive_expression addop term
Rule 76    additive_expression -> term
Rule 77    addop -> PLUS
Rule 78    addop -> MINUS
Rule 79    term -> term mulop factor
Rule 80    term -> factor
Rule 81    mulop -> TIMES
Rule 82    mulop -> DIVIDE
Rule 83    factor -> LPAREN expression RPAREN
Rule 84    factor -> var
Rule 85    factor -> call
Rule 86    factor -> NUMBER
Rule 87    call -> ID LPAREN args RPAREN
Rule 88    args -> args_list
Rule 89    args -> empty
Rule 90    args_list -> args_list COMMA expression
Rule 91    args_list -> expression
Rule 92    empty -> <empty>

Terminals, with rules where they appear

CIN                  : 44 45 46
COMMA                : 9 19 90
COUT                 : 36 37 38 39 40 41 42 43
DEQUAL               : 72
DISTINT              : 73
DIVIDE               : 82
ELSE                 : 52
ENDL                 : 37 39 41 43
EQUAL                : 10 11 62
FOR                  : 55 56 57 58 59
GET                  : 46
GREATER              : 6 70
GREATEREQUAL         : 71
HASH                 : 6
ID                   : 6 8 9 9 10 11 12 16 22 23 36 37 47 48 49 50 64 65 87
IF                   : 51 52
INCLUDE              : 6
INT                  : 13
LBLOCK               : 24
LBRACKET             : 12 23 65
LESS                 : 6 68
LESSEQUAL            : 69
LGREATER             : 36 37 37 38 39 39 40 41 41 42 42 43 43 43
LPAREN               : 16 46 51 52 53 55 56 57 58 59 83 87
MINUS                : 78
MINUSMINUS           : 49 50 58 59
NAMESPACE            : 7
NUMBER               : 10 12 86
PLUS                 : 77
PLUSPLUS             : 47 48 56 57
POINT                : 46
QUOTES               : 36 36 37 37 74
RBLOCK               : 24
RBRACKET             : 12 23 65
RETURN               : 60 61
RGREATER             : 44 45 45
RPAREN               : 16 46 51 52 53 55 56 57 58 59 83 87
SEMICOLON            : 7 8 9 10 11 12 34 35 36 37 38 39 40 41 42 43 44 45 46 55 55 56 56 57 57 58 58 59 59 60 61
STD                  : 7
STRING               : 15 38 39
TIMES                : 81
USING                : 7
VOID                 : 14 18
WHILE                : 53
error                : 

Nonterminals, with rules where they appear

additive_expression  : 66 66 67 75
addop                : 75
args                 : 87
args_list            : 88 90
call                 : 85
compount_stmt        : 16 30
declaration          : 2 3
declaration_list     : 1 2
empty                : 21 26 28 89
expression           : 34 51 52 53 55 55 55 56 56 57 57 58 58 59 59 61 62 65 83 90 91
expression_stmt      : 29
factor               : 79 80
fun_declaration      : 5
iteration_stmt       : 32
local_declarations   : 24 25
mulop                : 79
param                : 19 20
param_list           : 17 19
params               : 16
program              : 0
relop                : 66
return_stmt          : 33
selection_stmt       : 31
simple_expression    : 63
statement            : 27 51 52 52 53 55 56 57 58 59
statement_list       : 24 27
term                 : 75 76 79
type_specifier       : 8 9 10 11 12 16 22 23 55 56 57 58 59
var                  : 11 40 41 42 42 43 43 44 45 45 56 57 58 59 62 84
var_declaration      : 4 25

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration_list declaration
    (3) declaration_list -> . declaration
    (4) declaration -> . var_declaration
    (5) declaration -> . fun_declaration
    (6) declaration -> . HASH INCLUDE LESS ID GREATER
    (7) declaration -> . USING NAMESPACE STD SEMICOLON
    (8) var_declaration -> . type_specifier ID SEMICOLON
    (9) var_declaration -> . type_specifier ID COMMA ID SEMICOLON
    (10) var_declaration -> . type_specifier ID EQUAL NUMBER SEMICOLON
    (11) var_declaration -> . type_specifier ID EQUAL var SEMICOLON
    (12) var_declaration -> . type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON
    (16) fun_declaration -> . type_specifier ID LPAREN params RPAREN compount_stmt
    (13) type_specifier -> . INT
    (14) type_specifier -> . VOID
    (15) type_specifier -> . STRING

    HASH            shift and go to state 6
    USING           shift and go to state 7
    INT             shift and go to state 9
    VOID            shift and go to state 10
    STRING          shift and go to state 11

    program                        shift and go to state 1
    declaration_list               shift and go to state 2
    declaration                    shift and go to state 3
    var_declaration                shift and go to state 4
    fun_declaration                shift and go to state 5
    type_specifier                 shift and go to state 8

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration_list .
    (2) declaration_list -> declaration_list . declaration
    (4) declaration -> . var_declaration
    (5) declaration -> . fun_declaration
    (6) declaration -> . HASH INCLUDE LESS ID GREATER
    (7) declaration -> . USING NAMESPACE STD SEMICOLON
    (8) var_declaration -> . type_specifier ID SEMICOLON
    (9) var_declaration -> . type_specifier ID COMMA ID SEMICOLON
    (10) var_declaration -> . type_specifier ID EQUAL NUMBER SEMICOLON
    (11) var_declaration -> . type_specifier ID EQUAL var SEMICOLON
    (12) var_declaration -> . type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON
    (16) fun_declaration -> . type_specifier ID LPAREN params RPAREN compount_stmt
    (13) type_specifier -> . INT
    (14) type_specifier -> . VOID
    (15) type_specifier -> . STRING

    $end            reduce using rule 1 (program -> declaration_list .)
    HASH            shift and go to state 6
    USING           shift and go to state 7
    INT             shift and go to state 9
    VOID            shift and go to state 10
    STRING          shift and go to state 11

    declaration                    shift and go to state 12
    var_declaration                shift and go to state 4
    fun_declaration                shift and go to state 5
    type_specifier                 shift and go to state 8

state 3

    (3) declaration_list -> declaration .

    HASH            reduce using rule 3 (declaration_list -> declaration .)
    USING           reduce using rule 3 (declaration_list -> declaration .)
    INT             reduce using rule 3 (declaration_list -> declaration .)
    VOID            reduce using rule 3 (declaration_list -> declaration .)
    STRING          reduce using rule 3 (declaration_list -> declaration .)
    $end            reduce using rule 3 (declaration_list -> declaration .)


state 4

    (4) declaration -> var_declaration .

    HASH            reduce using rule 4 (declaration -> var_declaration .)
    USING           reduce using rule 4 (declaration -> var_declaration .)
    INT             reduce using rule 4 (declaration -> var_declaration .)
    VOID            reduce using rule 4 (declaration -> var_declaration .)
    STRING          reduce using rule 4 (declaration -> var_declaration .)
    $end            reduce using rule 4 (declaration -> var_declaration .)


state 5

    (5) declaration -> fun_declaration .

    HASH            reduce using rule 5 (declaration -> fun_declaration .)
    USING           reduce using rule 5 (declaration -> fun_declaration .)
    INT             reduce using rule 5 (declaration -> fun_declaration .)
    VOID            reduce using rule 5 (declaration -> fun_declaration .)
    STRING          reduce using rule 5 (declaration -> fun_declaration .)
    $end            reduce using rule 5 (declaration -> fun_declaration .)


state 6

    (6) declaration -> HASH . INCLUDE LESS ID GREATER

    INCLUDE         shift and go to state 13


state 7

    (7) declaration -> USING . NAMESPACE STD SEMICOLON

    NAMESPACE       shift and go to state 14


state 8

    (8) var_declaration -> type_specifier . ID SEMICOLON
    (9) var_declaration -> type_specifier . ID COMMA ID SEMICOLON
    (10) var_declaration -> type_specifier . ID EQUAL NUMBER SEMICOLON
    (11) var_declaration -> type_specifier . ID EQUAL var SEMICOLON
    (12) var_declaration -> type_specifier . ID LBRACKET NUMBER RBRACKET SEMICOLON
    (16) fun_declaration -> type_specifier . ID LPAREN params RPAREN compount_stmt

    ID              shift and go to state 15


state 9

    (13) type_specifier -> INT .

    ID              reduce using rule 13 (type_specifier -> INT .)
    LPAREN          reduce using rule 13 (type_specifier -> INT .)
    NUMBER          reduce using rule 13 (type_specifier -> INT .)


state 10

    (14) type_specifier -> VOID .

    ID              reduce using rule 14 (type_specifier -> VOID .)
    LPAREN          reduce using rule 14 (type_specifier -> VOID .)
    NUMBER          reduce using rule 14 (type_specifier -> VOID .)


state 11

    (15) type_specifier -> STRING .

    ID              reduce using rule 15 (type_specifier -> STRING .)
    LPAREN          reduce using rule 15 (type_specifier -> STRING .)
    NUMBER          reduce using rule 15 (type_specifier -> STRING .)


state 12

    (2) declaration_list -> declaration_list declaration .

    HASH            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    USING           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    INT             reduce using rule 2 (declaration_list -> declaration_list declaration .)
    VOID            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    STRING          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 2 (declaration_list -> declaration_list declaration .)


state 13

    (6) declaration -> HASH INCLUDE . LESS ID GREATER

    LESS            shift and go to state 16


state 14

    (7) declaration -> USING NAMESPACE . STD SEMICOLON

    STD             shift and go to state 17


state 15

    (8) var_declaration -> type_specifier ID . SEMICOLON
    (9) var_declaration -> type_specifier ID . COMMA ID SEMICOLON
    (10) var_declaration -> type_specifier ID . EQUAL NUMBER SEMICOLON
    (11) var_declaration -> type_specifier ID . EQUAL var SEMICOLON
    (12) var_declaration -> type_specifier ID . LBRACKET NUMBER RBRACKET SEMICOLON
    (16) fun_declaration -> type_specifier ID . LPAREN params RPAREN compount_stmt

    SEMICOLON       shift and go to state 18
    COMMA           shift and go to state 19
    EQUAL           shift and go to state 20
    LBRACKET        shift and go to state 21
    LPAREN          shift and go to state 22


state 16

    (6) declaration -> HASH INCLUDE LESS . ID GREATER

    ID              shift and go to state 23


state 17

    (7) declaration -> USING NAMESPACE STD . SEMICOLON

    SEMICOLON       shift and go to state 24


state 18

    (8) var_declaration -> type_specifier ID SEMICOLON .

    HASH            reduce using rule 8 (var_declaration -> type_specifier ID SEMICOLON .)
    USING           reduce using rule 8 (var_declaration -> type_specifier ID SEMICOLON .)
    INT             reduce using rule 8 (var_declaration -> type_specifier ID SEMICOLON .)
    VOID            reduce using rule 8 (var_declaration -> type_specifier ID SEMICOLON .)
    STRING          reduce using rule 8 (var_declaration -> type_specifier ID SEMICOLON .)
    $end            reduce using rule 8 (var_declaration -> type_specifier ID SEMICOLON .)
    RBLOCK          reduce using rule 8 (var_declaration -> type_specifier ID SEMICOLON .)
    SEMICOLON       reduce using rule 8 (var_declaration -> type_specifier ID SEMICOLON .)
    COUT            reduce using rule 8 (var_declaration -> type_specifier ID SEMICOLON .)
    CIN             reduce using rule 8 (var_declaration -> type_specifier ID SEMICOLON .)
    ID              reduce using rule 8 (var_declaration -> type_specifier ID SEMICOLON .)
    PLUSPLUS        reduce using rule 8 (var_declaration -> type_specifier ID SEMICOLON .)
    MINUSMINUS      reduce using rule 8 (var_declaration -> type_specifier ID SEMICOLON .)
    LBLOCK          reduce using rule 8 (var_declaration -> type_specifier ID SEMICOLON .)
    IF              reduce using rule 8 (var_declaration -> type_specifier ID SEMICOLON .)
    WHILE           reduce using rule 8 (var_declaration -> type_specifier ID SEMICOLON .)
    FOR             reduce using rule 8 (var_declaration -> type_specifier ID SEMICOLON .)
    RETURN          reduce using rule 8 (var_declaration -> type_specifier ID SEMICOLON .)
    LPAREN          reduce using rule 8 (var_declaration -> type_specifier ID SEMICOLON .)
    NUMBER          reduce using rule 8 (var_declaration -> type_specifier ID SEMICOLON .)


state 19

    (9) var_declaration -> type_specifier ID COMMA . ID SEMICOLON

    ID              shift and go to state 25


state 20

    (10) var_declaration -> type_specifier ID EQUAL . NUMBER SEMICOLON
    (11) var_declaration -> type_specifier ID EQUAL . var SEMICOLON
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET

    NUMBER          shift and go to state 27
    ID              shift and go to state 26

    var                            shift and go to state 28

state 21

    (12) var_declaration -> type_specifier ID LBRACKET . NUMBER RBRACKET SEMICOLON

    NUMBER          shift and go to state 29


state 22

    (16) fun_declaration -> type_specifier ID LPAREN . params RPAREN compount_stmt
    (17) params -> . param_list
    (18) params -> . VOID
    (19) param_list -> . param_list COMMA param
    (20) param_list -> . param
    (21) param_list -> . empty
    (22) param -> . type_specifier ID
    (23) param -> . type_specifier ID LBRACKET RBRACKET
    (92) empty -> .
    (13) type_specifier -> . INT
    (14) type_specifier -> . VOID
    (15) type_specifier -> . STRING

    VOID            shift and go to state 33
    COMMA           reduce using rule 92 (empty -> .)
    RPAREN          reduce using rule 92 (empty -> .)
    INT             shift and go to state 9
    STRING          shift and go to state 11

    type_specifier                 shift and go to state 30
    params                         shift and go to state 31
    param_list                     shift and go to state 32
    param                          shift and go to state 34
    empty                          shift and go to state 35

state 23

    (6) declaration -> HASH INCLUDE LESS ID . GREATER

    GREATER         shift and go to state 36


state 24

    (7) declaration -> USING NAMESPACE STD SEMICOLON .

    HASH            reduce using rule 7 (declaration -> USING NAMESPACE STD SEMICOLON .)
    USING           reduce using rule 7 (declaration -> USING NAMESPACE STD SEMICOLON .)
    INT             reduce using rule 7 (declaration -> USING NAMESPACE STD SEMICOLON .)
    VOID            reduce using rule 7 (declaration -> USING NAMESPACE STD SEMICOLON .)
    STRING          reduce using rule 7 (declaration -> USING NAMESPACE STD SEMICOLON .)
    $end            reduce using rule 7 (declaration -> USING NAMESPACE STD SEMICOLON .)


state 25

    (9) var_declaration -> type_specifier ID COMMA ID . SEMICOLON

    SEMICOLON       shift and go to state 37


state 26

    (64) var -> ID .
    (65) var -> ID . LBRACKET expression RBRACKET

    SEMICOLON       reduce using rule 64 (var -> ID .)
    LGREATER        reduce using rule 64 (var -> ID .)
    RGREATER        reduce using rule 64 (var -> ID .)
    RPAREN          reduce using rule 64 (var -> ID .)
    LBRACKET        shift and go to state 38


state 27

    (10) var_declaration -> type_specifier ID EQUAL NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 39


state 28

    (11) var_declaration -> type_specifier ID EQUAL var . SEMICOLON

    SEMICOLON       shift and go to state 40


state 29

    (12) var_declaration -> type_specifier ID LBRACKET NUMBER . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 41


state 30

    (22) param -> type_specifier . ID
    (23) param -> type_specifier . ID LBRACKET RBRACKET

    ID              shift and go to state 42


state 31

    (16) fun_declaration -> type_specifier ID LPAREN params . RPAREN compount_stmt

    RPAREN          shift and go to state 43


state 32

    (17) params -> param_list .
    (19) param_list -> param_list . COMMA param

    RPAREN          reduce using rule 17 (params -> param_list .)
    COMMA           shift and go to state 44


state 33

    (18) params -> VOID .
    (14) type_specifier -> VOID .

    RPAREN          reduce using rule 18 (params -> VOID .)
    ID              reduce using rule 14 (type_specifier -> VOID .)


state 34

    (20) param_list -> param .

    COMMA           reduce using rule 20 (param_list -> param .)
    RPAREN          reduce using rule 20 (param_list -> param .)


state 35

    (21) param_list -> empty .

    COMMA           reduce using rule 21 (param_list -> empty .)
    RPAREN          reduce using rule 21 (param_list -> empty .)


state 36

    (6) declaration -> HASH INCLUDE LESS ID GREATER .

    HASH            reduce using rule 6 (declaration -> HASH INCLUDE LESS ID GREATER .)
    USING           reduce using rule 6 (declaration -> HASH INCLUDE LESS ID GREATER .)
    INT             reduce using rule 6 (declaration -> HASH INCLUDE LESS ID GREATER .)
    VOID            reduce using rule 6 (declaration -> HASH INCLUDE LESS ID GREATER .)
    STRING          reduce using rule 6 (declaration -> HASH INCLUDE LESS ID GREATER .)
    $end            reduce using rule 6 (declaration -> HASH INCLUDE LESS ID GREATER .)


state 37

    (9) var_declaration -> type_specifier ID COMMA ID SEMICOLON .

    HASH            reduce using rule 9 (var_declaration -> type_specifier ID COMMA ID SEMICOLON .)
    USING           reduce using rule 9 (var_declaration -> type_specifier ID COMMA ID SEMICOLON .)
    INT             reduce using rule 9 (var_declaration -> type_specifier ID COMMA ID SEMICOLON .)
    VOID            reduce using rule 9 (var_declaration -> type_specifier ID COMMA ID SEMICOLON .)
    STRING          reduce using rule 9 (var_declaration -> type_specifier ID COMMA ID SEMICOLON .)
    $end            reduce using rule 9 (var_declaration -> type_specifier ID COMMA ID SEMICOLON .)
    RBLOCK          reduce using rule 9 (var_declaration -> type_specifier ID COMMA ID SEMICOLON .)
    SEMICOLON       reduce using rule 9 (var_declaration -> type_specifier ID COMMA ID SEMICOLON .)
    COUT            reduce using rule 9 (var_declaration -> type_specifier ID COMMA ID SEMICOLON .)
    CIN             reduce using rule 9 (var_declaration -> type_specifier ID COMMA ID SEMICOLON .)
    ID              reduce using rule 9 (var_declaration -> type_specifier ID COMMA ID SEMICOLON .)
    PLUSPLUS        reduce using rule 9 (var_declaration -> type_specifier ID COMMA ID SEMICOLON .)
    MINUSMINUS      reduce using rule 9 (var_declaration -> type_specifier ID COMMA ID SEMICOLON .)
    LBLOCK          reduce using rule 9 (var_declaration -> type_specifier ID COMMA ID SEMICOLON .)
    IF              reduce using rule 9 (var_declaration -> type_specifier ID COMMA ID SEMICOLON .)
    WHILE           reduce using rule 9 (var_declaration -> type_specifier ID COMMA ID SEMICOLON .)
    FOR             reduce using rule 9 (var_declaration -> type_specifier ID COMMA ID SEMICOLON .)
    RETURN          reduce using rule 9 (var_declaration -> type_specifier ID COMMA ID SEMICOLON .)
    LPAREN          reduce using rule 9 (var_declaration -> type_specifier ID COMMA ID SEMICOLON .)
    NUMBER          reduce using rule 9 (var_declaration -> type_specifier ID COMMA ID SEMICOLON .)


state 38

    (65) var -> ID LBRACKET . expression RBRACKET
    (62) expression -> . var EQUAL expression
    (63) expression -> . simple_expression
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET
    (66) simple_expression -> . additive_expression relop additive_expression
    (67) simple_expression -> . additive_expression
    (75) additive_expression -> . additive_expression addop term
    (76) additive_expression -> . term
    (79) term -> . term mulop factor
    (80) term -> . factor
    (83) factor -> . LPAREN expression RPAREN
    (84) factor -> . var
    (85) factor -> . call
    (86) factor -> . NUMBER
    (87) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 45
    LPAREN          shift and go to state 52
    NUMBER          shift and go to state 54

    expression                     shift and go to state 46
    var                            shift and go to state 47
    simple_expression              shift and go to state 48
    additive_expression            shift and go to state 49
    term                           shift and go to state 50
    factor                         shift and go to state 51
    call                           shift and go to state 53

state 39

    (10) var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON .

    HASH            reduce using rule 10 (var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON .)
    USING           reduce using rule 10 (var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON .)
    INT             reduce using rule 10 (var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON .)
    VOID            reduce using rule 10 (var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON .)
    STRING          reduce using rule 10 (var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON .)
    $end            reduce using rule 10 (var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON .)
    RBLOCK          reduce using rule 10 (var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON .)
    SEMICOLON       reduce using rule 10 (var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON .)
    COUT            reduce using rule 10 (var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON .)
    CIN             reduce using rule 10 (var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON .)
    ID              reduce using rule 10 (var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON .)
    PLUSPLUS        reduce using rule 10 (var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON .)
    MINUSMINUS      reduce using rule 10 (var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON .)
    LBLOCK          reduce using rule 10 (var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON .)
    IF              reduce using rule 10 (var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON .)
    WHILE           reduce using rule 10 (var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON .)
    FOR             reduce using rule 10 (var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON .)
    RETURN          reduce using rule 10 (var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON .)
    LPAREN          reduce using rule 10 (var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON .)
    NUMBER          reduce using rule 10 (var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON .)


state 40

    (11) var_declaration -> type_specifier ID EQUAL var SEMICOLON .

    HASH            reduce using rule 11 (var_declaration -> type_specifier ID EQUAL var SEMICOLON .)
    USING           reduce using rule 11 (var_declaration -> type_specifier ID EQUAL var SEMICOLON .)
    INT             reduce using rule 11 (var_declaration -> type_specifier ID EQUAL var SEMICOLON .)
    VOID            reduce using rule 11 (var_declaration -> type_specifier ID EQUAL var SEMICOLON .)
    STRING          reduce using rule 11 (var_declaration -> type_specifier ID EQUAL var SEMICOLON .)
    $end            reduce using rule 11 (var_declaration -> type_specifier ID EQUAL var SEMICOLON .)
    RBLOCK          reduce using rule 11 (var_declaration -> type_specifier ID EQUAL var SEMICOLON .)
    SEMICOLON       reduce using rule 11 (var_declaration -> type_specifier ID EQUAL var SEMICOLON .)
    COUT            reduce using rule 11 (var_declaration -> type_specifier ID EQUAL var SEMICOLON .)
    CIN             reduce using rule 11 (var_declaration -> type_specifier ID EQUAL var SEMICOLON .)
    ID              reduce using rule 11 (var_declaration -> type_specifier ID EQUAL var SEMICOLON .)
    PLUSPLUS        reduce using rule 11 (var_declaration -> type_specifier ID EQUAL var SEMICOLON .)
    MINUSMINUS      reduce using rule 11 (var_declaration -> type_specifier ID EQUAL var SEMICOLON .)
    LBLOCK          reduce using rule 11 (var_declaration -> type_specifier ID EQUAL var SEMICOLON .)
    IF              reduce using rule 11 (var_declaration -> type_specifier ID EQUAL var SEMICOLON .)
    WHILE           reduce using rule 11 (var_declaration -> type_specifier ID EQUAL var SEMICOLON .)
    FOR             reduce using rule 11 (var_declaration -> type_specifier ID EQUAL var SEMICOLON .)
    RETURN          reduce using rule 11 (var_declaration -> type_specifier ID EQUAL var SEMICOLON .)
    LPAREN          reduce using rule 11 (var_declaration -> type_specifier ID EQUAL var SEMICOLON .)
    NUMBER          reduce using rule 11 (var_declaration -> type_specifier ID EQUAL var SEMICOLON .)


state 41

    (12) var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 55


state 42

    (22) param -> type_specifier ID .
    (23) param -> type_specifier ID . LBRACKET RBRACKET

    COMMA           reduce using rule 22 (param -> type_specifier ID .)
    RPAREN          reduce using rule 22 (param -> type_specifier ID .)
    LBRACKET        shift and go to state 56


state 43

    (16) fun_declaration -> type_specifier ID LPAREN params RPAREN . compount_stmt
    (24) compount_stmt -> . LBLOCK local_declarations statement_list RBLOCK

    LBLOCK          shift and go to state 58

    compount_stmt                  shift and go to state 57

state 44

    (19) param_list -> param_list COMMA . param
    (22) param -> . type_specifier ID
    (23) param -> . type_specifier ID LBRACKET RBRACKET
    (13) type_specifier -> . INT
    (14) type_specifier -> . VOID
    (15) type_specifier -> . STRING

    INT             shift and go to state 9
    VOID            shift and go to state 10
    STRING          shift and go to state 11

    param                          shift and go to state 59
    type_specifier                 shift and go to state 30

state 45

    (64) var -> ID .
    (65) var -> ID . LBRACKET expression RBRACKET
    (87) call -> ID . LPAREN args RPAREN

    EQUAL           reduce using rule 64 (var -> ID .)
    TIMES           reduce using rule 64 (var -> ID .)
    DIVIDE          reduce using rule 64 (var -> ID .)
    LESS            reduce using rule 64 (var -> ID .)
    LESSEQUAL       reduce using rule 64 (var -> ID .)
    GREATER         reduce using rule 64 (var -> ID .)
    GREATEREQUAL    reduce using rule 64 (var -> ID .)
    DEQUAL          reduce using rule 64 (var -> ID .)
    DISTINT         reduce using rule 64 (var -> ID .)
    QUOTES          reduce using rule 64 (var -> ID .)
    PLUS            reduce using rule 64 (var -> ID .)
    MINUS           reduce using rule 64 (var -> ID .)
    RBRACKET        reduce using rule 64 (var -> ID .)
    RPAREN          reduce using rule 64 (var -> ID .)
    COMMA           reduce using rule 64 (var -> ID .)
    SEMICOLON       reduce using rule 64 (var -> ID .)
    PLUSPLUS        reduce using rule 64 (var -> ID .)
    MINUSMINUS      reduce using rule 64 (var -> ID .)
    LBRACKET        shift and go to state 38
    LPAREN          shift and go to state 60


state 46

    (65) var -> ID LBRACKET expression . RBRACKET

    RBRACKET        shift and go to state 61


state 47

    (62) expression -> var . EQUAL expression
    (84) factor -> var .

    EQUAL           shift and go to state 62
    TIMES           reduce using rule 84 (factor -> var .)
    DIVIDE          reduce using rule 84 (factor -> var .)
    LESS            reduce using rule 84 (factor -> var .)
    LESSEQUAL       reduce using rule 84 (factor -> var .)
    GREATER         reduce using rule 84 (factor -> var .)
    GREATEREQUAL    reduce using rule 84 (factor -> var .)
    DEQUAL          reduce using rule 84 (factor -> var .)
    DISTINT         reduce using rule 84 (factor -> var .)
    QUOTES          reduce using rule 84 (factor -> var .)
    PLUS            reduce using rule 84 (factor -> var .)
    MINUS           reduce using rule 84 (factor -> var .)
    RBRACKET        reduce using rule 84 (factor -> var .)
    RPAREN          reduce using rule 84 (factor -> var .)
    COMMA           reduce using rule 84 (factor -> var .)
    SEMICOLON       reduce using rule 84 (factor -> var .)


state 48

    (63) expression -> simple_expression .

    RBRACKET        reduce using rule 63 (expression -> simple_expression .)
    RPAREN          reduce using rule 63 (expression -> simple_expression .)
    COMMA           reduce using rule 63 (expression -> simple_expression .)
    SEMICOLON       reduce using rule 63 (expression -> simple_expression .)


state 49

    (66) simple_expression -> additive_expression . relop additive_expression
    (67) simple_expression -> additive_expression .
    (75) additive_expression -> additive_expression . addop term
    (68) relop -> . LESS
    (69) relop -> . LESSEQUAL
    (70) relop -> . GREATER
    (71) relop -> . GREATEREQUAL
    (72) relop -> . DEQUAL
    (73) relop -> . DISTINT
    (74) relop -> . QUOTES
    (77) addop -> . PLUS
    (78) addop -> . MINUS

    RBRACKET        reduce using rule 67 (simple_expression -> additive_expression .)
    RPAREN          reduce using rule 67 (simple_expression -> additive_expression .)
    COMMA           reduce using rule 67 (simple_expression -> additive_expression .)
    SEMICOLON       reduce using rule 67 (simple_expression -> additive_expression .)
    LESS            shift and go to state 65
    LESSEQUAL       shift and go to state 66
    GREATER         shift and go to state 67
    GREATEREQUAL    shift and go to state 68
    DEQUAL          shift and go to state 69
    DISTINT         shift and go to state 70
    QUOTES          shift and go to state 71
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73

    relop                          shift and go to state 63
    addop                          shift and go to state 64

state 50

    (76) additive_expression -> term .
    (79) term -> term . mulop factor
    (81) mulop -> . TIMES
    (82) mulop -> . DIVIDE

    LESS            reduce using rule 76 (additive_expression -> term .)
    LESSEQUAL       reduce using rule 76 (additive_expression -> term .)
    GREATER         reduce using rule 76 (additive_expression -> term .)
    GREATEREQUAL    reduce using rule 76 (additive_expression -> term .)
    DEQUAL          reduce using rule 76 (additive_expression -> term .)
    DISTINT         reduce using rule 76 (additive_expression -> term .)
    QUOTES          reduce using rule 76 (additive_expression -> term .)
    PLUS            reduce using rule 76 (additive_expression -> term .)
    MINUS           reduce using rule 76 (additive_expression -> term .)
    RBRACKET        reduce using rule 76 (additive_expression -> term .)
    RPAREN          reduce using rule 76 (additive_expression -> term .)
    COMMA           reduce using rule 76 (additive_expression -> term .)
    SEMICOLON       reduce using rule 76 (additive_expression -> term .)
    TIMES           shift and go to state 75
    DIVIDE          shift and go to state 76

    mulop                          shift and go to state 74

state 51

    (80) term -> factor .

    TIMES           reduce using rule 80 (term -> factor .)
    DIVIDE          reduce using rule 80 (term -> factor .)
    LESS            reduce using rule 80 (term -> factor .)
    LESSEQUAL       reduce using rule 80 (term -> factor .)
    GREATER         reduce using rule 80 (term -> factor .)
    GREATEREQUAL    reduce using rule 80 (term -> factor .)
    DEQUAL          reduce using rule 80 (term -> factor .)
    DISTINT         reduce using rule 80 (term -> factor .)
    QUOTES          reduce using rule 80 (term -> factor .)
    PLUS            reduce using rule 80 (term -> factor .)
    MINUS           reduce using rule 80 (term -> factor .)
    RBRACKET        reduce using rule 80 (term -> factor .)
    RPAREN          reduce using rule 80 (term -> factor .)
    COMMA           reduce using rule 80 (term -> factor .)
    SEMICOLON       reduce using rule 80 (term -> factor .)


state 52

    (83) factor -> LPAREN . expression RPAREN
    (62) expression -> . var EQUAL expression
    (63) expression -> . simple_expression
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET
    (66) simple_expression -> . additive_expression relop additive_expression
    (67) simple_expression -> . additive_expression
    (75) additive_expression -> . additive_expression addop term
    (76) additive_expression -> . term
    (79) term -> . term mulop factor
    (80) term -> . factor
    (83) factor -> . LPAREN expression RPAREN
    (84) factor -> . var
    (85) factor -> . call
    (86) factor -> . NUMBER
    (87) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 45
    LPAREN          shift and go to state 52
    NUMBER          shift and go to state 54

    expression                     shift and go to state 77
    var                            shift and go to state 47
    simple_expression              shift and go to state 48
    additive_expression            shift and go to state 49
    term                           shift and go to state 50
    factor                         shift and go to state 51
    call                           shift and go to state 53

state 53

    (85) factor -> call .

    TIMES           reduce using rule 85 (factor -> call .)
    DIVIDE          reduce using rule 85 (factor -> call .)
    LESS            reduce using rule 85 (factor -> call .)
    LESSEQUAL       reduce using rule 85 (factor -> call .)
    GREATER         reduce using rule 85 (factor -> call .)
    GREATEREQUAL    reduce using rule 85 (factor -> call .)
    DEQUAL          reduce using rule 85 (factor -> call .)
    DISTINT         reduce using rule 85 (factor -> call .)
    QUOTES          reduce using rule 85 (factor -> call .)
    PLUS            reduce using rule 85 (factor -> call .)
    MINUS           reduce using rule 85 (factor -> call .)
    RBRACKET        reduce using rule 85 (factor -> call .)
    RPAREN          reduce using rule 85 (factor -> call .)
    COMMA           reduce using rule 85 (factor -> call .)
    SEMICOLON       reduce using rule 85 (factor -> call .)


state 54

    (86) factor -> NUMBER .

    TIMES           reduce using rule 86 (factor -> NUMBER .)
    DIVIDE          reduce using rule 86 (factor -> NUMBER .)
    LESS            reduce using rule 86 (factor -> NUMBER .)
    LESSEQUAL       reduce using rule 86 (factor -> NUMBER .)
    GREATER         reduce using rule 86 (factor -> NUMBER .)
    GREATEREQUAL    reduce using rule 86 (factor -> NUMBER .)
    DEQUAL          reduce using rule 86 (factor -> NUMBER .)
    DISTINT         reduce using rule 86 (factor -> NUMBER .)
    QUOTES          reduce using rule 86 (factor -> NUMBER .)
    PLUS            reduce using rule 86 (factor -> NUMBER .)
    MINUS           reduce using rule 86 (factor -> NUMBER .)
    RBRACKET        reduce using rule 86 (factor -> NUMBER .)
    RPAREN          reduce using rule 86 (factor -> NUMBER .)
    COMMA           reduce using rule 86 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 86 (factor -> NUMBER .)


state 55

    (12) var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON .

    HASH            reduce using rule 12 (var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    USING           reduce using rule 12 (var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    INT             reduce using rule 12 (var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    VOID            reduce using rule 12 (var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    STRING          reduce using rule 12 (var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    $end            reduce using rule 12 (var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    RBLOCK          reduce using rule 12 (var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 12 (var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    COUT            reduce using rule 12 (var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    CIN             reduce using rule 12 (var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    ID              reduce using rule 12 (var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    PLUSPLUS        reduce using rule 12 (var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    MINUSMINUS      reduce using rule 12 (var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    LBLOCK          reduce using rule 12 (var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    IF              reduce using rule 12 (var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    WHILE           reduce using rule 12 (var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    FOR             reduce using rule 12 (var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    RETURN          reduce using rule 12 (var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    LPAREN          reduce using rule 12 (var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    NUMBER          reduce using rule 12 (var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON .)


state 56

    (23) param -> type_specifier ID LBRACKET . RBRACKET

    RBRACKET        shift and go to state 78


state 57

    (16) fun_declaration -> type_specifier ID LPAREN params RPAREN compount_stmt .

    HASH            reduce using rule 16 (fun_declaration -> type_specifier ID LPAREN params RPAREN compount_stmt .)
    USING           reduce using rule 16 (fun_declaration -> type_specifier ID LPAREN params RPAREN compount_stmt .)
    INT             reduce using rule 16 (fun_declaration -> type_specifier ID LPAREN params RPAREN compount_stmt .)
    VOID            reduce using rule 16 (fun_declaration -> type_specifier ID LPAREN params RPAREN compount_stmt .)
    STRING          reduce using rule 16 (fun_declaration -> type_specifier ID LPAREN params RPAREN compount_stmt .)
    $end            reduce using rule 16 (fun_declaration -> type_specifier ID LPAREN params RPAREN compount_stmt .)


state 58

    (24) compount_stmt -> LBLOCK . local_declarations statement_list RBLOCK
    (25) local_declarations -> . local_declarations var_declaration
    (26) local_declarations -> . empty
    (92) empty -> .

    INT             reduce using rule 92 (empty -> .)
    VOID            reduce using rule 92 (empty -> .)
    STRING          reduce using rule 92 (empty -> .)
    RBLOCK          reduce using rule 92 (empty -> .)
    SEMICOLON       reduce using rule 92 (empty -> .)
    COUT            reduce using rule 92 (empty -> .)
    CIN             reduce using rule 92 (empty -> .)
    ID              reduce using rule 92 (empty -> .)
    PLUSPLUS        reduce using rule 92 (empty -> .)
    MINUSMINUS      reduce using rule 92 (empty -> .)
    LBLOCK          reduce using rule 92 (empty -> .)
    IF              reduce using rule 92 (empty -> .)
    WHILE           reduce using rule 92 (empty -> .)
    FOR             reduce using rule 92 (empty -> .)
    RETURN          reduce using rule 92 (empty -> .)
    LPAREN          reduce using rule 92 (empty -> .)
    NUMBER          reduce using rule 92 (empty -> .)

    local_declarations             shift and go to state 79
    empty                          shift and go to state 80

state 59

    (19) param_list -> param_list COMMA param .

    COMMA           reduce using rule 19 (param_list -> param_list COMMA param .)
    RPAREN          reduce using rule 19 (param_list -> param_list COMMA param .)


state 60

    (87) call -> ID LPAREN . args RPAREN
    (88) args -> . args_list
    (89) args -> . empty
    (90) args_list -> . args_list COMMA expression
    (91) args_list -> . expression
    (92) empty -> .
    (62) expression -> . var EQUAL expression
    (63) expression -> . simple_expression
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET
    (66) simple_expression -> . additive_expression relop additive_expression
    (67) simple_expression -> . additive_expression
    (75) additive_expression -> . additive_expression addop term
    (76) additive_expression -> . term
    (79) term -> . term mulop factor
    (80) term -> . factor
    (83) factor -> . LPAREN expression RPAREN
    (84) factor -> . var
    (85) factor -> . call
    (86) factor -> . NUMBER
    (87) call -> . ID LPAREN args RPAREN

    RPAREN          reduce using rule 92 (empty -> .)
    ID              shift and go to state 45
    LPAREN          shift and go to state 52
    NUMBER          shift and go to state 54

    args                           shift and go to state 81
    args_list                      shift and go to state 82
    empty                          shift and go to state 83
    expression                     shift and go to state 84
    var                            shift and go to state 47
    simple_expression              shift and go to state 48
    additive_expression            shift and go to state 49
    term                           shift and go to state 50
    factor                         shift and go to state 51
    call                           shift and go to state 53

state 61

    (65) var -> ID LBRACKET expression RBRACKET .

    SEMICOLON       reduce using rule 65 (var -> ID LBRACKET expression RBRACKET .)
    EQUAL           reduce using rule 65 (var -> ID LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 65 (var -> ID LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 65 (var -> ID LBRACKET expression RBRACKET .)
    LESS            reduce using rule 65 (var -> ID LBRACKET expression RBRACKET .)
    LESSEQUAL       reduce using rule 65 (var -> ID LBRACKET expression RBRACKET .)
    GREATER         reduce using rule 65 (var -> ID LBRACKET expression RBRACKET .)
    GREATEREQUAL    reduce using rule 65 (var -> ID LBRACKET expression RBRACKET .)
    DEQUAL          reduce using rule 65 (var -> ID LBRACKET expression RBRACKET .)
    DISTINT         reduce using rule 65 (var -> ID LBRACKET expression RBRACKET .)
    QUOTES          reduce using rule 65 (var -> ID LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 65 (var -> ID LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 65 (var -> ID LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 65 (var -> ID LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 65 (var -> ID LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 65 (var -> ID LBRACKET expression RBRACKET .)
    LGREATER        reduce using rule 65 (var -> ID LBRACKET expression RBRACKET .)
    RGREATER        reduce using rule 65 (var -> ID LBRACKET expression RBRACKET .)
    PLUSPLUS        reduce using rule 65 (var -> ID LBRACKET expression RBRACKET .)
    MINUSMINUS      reduce using rule 65 (var -> ID LBRACKET expression RBRACKET .)


state 62

    (62) expression -> var EQUAL . expression
    (62) expression -> . var EQUAL expression
    (63) expression -> . simple_expression
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET
    (66) simple_expression -> . additive_expression relop additive_expression
    (67) simple_expression -> . additive_expression
    (75) additive_expression -> . additive_expression addop term
    (76) additive_expression -> . term
    (79) term -> . term mulop factor
    (80) term -> . factor
    (83) factor -> . LPAREN expression RPAREN
    (84) factor -> . var
    (85) factor -> . call
    (86) factor -> . NUMBER
    (87) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 45
    LPAREN          shift and go to state 52
    NUMBER          shift and go to state 54

    var                            shift and go to state 47
    expression                     shift and go to state 85
    simple_expression              shift and go to state 48
    additive_expression            shift and go to state 49
    term                           shift and go to state 50
    factor                         shift and go to state 51
    call                           shift and go to state 53

state 63

    (66) simple_expression -> additive_expression relop . additive_expression
    (75) additive_expression -> . additive_expression addop term
    (76) additive_expression -> . term
    (79) term -> . term mulop factor
    (80) term -> . factor
    (83) factor -> . LPAREN expression RPAREN
    (84) factor -> . var
    (85) factor -> . call
    (86) factor -> . NUMBER
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET
    (87) call -> . ID LPAREN args RPAREN

    LPAREN          shift and go to state 52
    NUMBER          shift and go to state 54
    ID              shift and go to state 45

    additive_expression            shift and go to state 86
    term                           shift and go to state 50
    factor                         shift and go to state 51
    var                            shift and go to state 87
    call                           shift and go to state 53

state 64

    (75) additive_expression -> additive_expression addop . term
    (79) term -> . term mulop factor
    (80) term -> . factor
    (83) factor -> . LPAREN expression RPAREN
    (84) factor -> . var
    (85) factor -> . call
    (86) factor -> . NUMBER
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET
    (87) call -> . ID LPAREN args RPAREN

    LPAREN          shift and go to state 52
    NUMBER          shift and go to state 54
    ID              shift and go to state 45

    term                           shift and go to state 88
    factor                         shift and go to state 51
    var                            shift and go to state 87
    call                           shift and go to state 53

state 65

    (68) relop -> LESS .

    LPAREN          reduce using rule 68 (relop -> LESS .)
    NUMBER          reduce using rule 68 (relop -> LESS .)
    ID              reduce using rule 68 (relop -> LESS .)


state 66

    (69) relop -> LESSEQUAL .

    LPAREN          reduce using rule 69 (relop -> LESSEQUAL .)
    NUMBER          reduce using rule 69 (relop -> LESSEQUAL .)
    ID              reduce using rule 69 (relop -> LESSEQUAL .)


state 67

    (70) relop -> GREATER .

    LPAREN          reduce using rule 70 (relop -> GREATER .)
    NUMBER          reduce using rule 70 (relop -> GREATER .)
    ID              reduce using rule 70 (relop -> GREATER .)


state 68

    (71) relop -> GREATEREQUAL .

    LPAREN          reduce using rule 71 (relop -> GREATEREQUAL .)
    NUMBER          reduce using rule 71 (relop -> GREATEREQUAL .)
    ID              reduce using rule 71 (relop -> GREATEREQUAL .)


state 69

    (72) relop -> DEQUAL .

    LPAREN          reduce using rule 72 (relop -> DEQUAL .)
    NUMBER          reduce using rule 72 (relop -> DEQUAL .)
    ID              reduce using rule 72 (relop -> DEQUAL .)


state 70

    (73) relop -> DISTINT .

    LPAREN          reduce using rule 73 (relop -> DISTINT .)
    NUMBER          reduce using rule 73 (relop -> DISTINT .)
    ID              reduce using rule 73 (relop -> DISTINT .)


state 71

    (74) relop -> QUOTES .

    LPAREN          reduce using rule 74 (relop -> QUOTES .)
    NUMBER          reduce using rule 74 (relop -> QUOTES .)
    ID              reduce using rule 74 (relop -> QUOTES .)


state 72

    (77) addop -> PLUS .

    LPAREN          reduce using rule 77 (addop -> PLUS .)
    NUMBER          reduce using rule 77 (addop -> PLUS .)
    ID              reduce using rule 77 (addop -> PLUS .)


state 73

    (78) addop -> MINUS .

    LPAREN          reduce using rule 78 (addop -> MINUS .)
    NUMBER          reduce using rule 78 (addop -> MINUS .)
    ID              reduce using rule 78 (addop -> MINUS .)


state 74

    (79) term -> term mulop . factor
    (83) factor -> . LPAREN expression RPAREN
    (84) factor -> . var
    (85) factor -> . call
    (86) factor -> . NUMBER
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET
    (87) call -> . ID LPAREN args RPAREN

    LPAREN          shift and go to state 52
    NUMBER          shift and go to state 54
    ID              shift and go to state 45

    factor                         shift and go to state 89
    var                            shift and go to state 87
    call                           shift and go to state 53

state 75

    (81) mulop -> TIMES .

    LPAREN          reduce using rule 81 (mulop -> TIMES .)
    NUMBER          reduce using rule 81 (mulop -> TIMES .)
    ID              reduce using rule 81 (mulop -> TIMES .)


state 76

    (82) mulop -> DIVIDE .

    LPAREN          reduce using rule 82 (mulop -> DIVIDE .)
    NUMBER          reduce using rule 82 (mulop -> DIVIDE .)
    ID              reduce using rule 82 (mulop -> DIVIDE .)


state 77

    (83) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 90


state 78

    (23) param -> type_specifier ID LBRACKET RBRACKET .

    COMMA           reduce using rule 23 (param -> type_specifier ID LBRACKET RBRACKET .)
    RPAREN          reduce using rule 23 (param -> type_specifier ID LBRACKET RBRACKET .)


state 79

    (24) compount_stmt -> LBLOCK local_declarations . statement_list RBLOCK
    (25) local_declarations -> local_declarations . var_declaration
    (27) statement_list -> . statement_list statement
    (28) statement_list -> . empty
    (8) var_declaration -> . type_specifier ID SEMICOLON
    (9) var_declaration -> . type_specifier ID COMMA ID SEMICOLON
    (10) var_declaration -> . type_specifier ID EQUAL NUMBER SEMICOLON
    (11) var_declaration -> . type_specifier ID EQUAL var SEMICOLON
    (12) var_declaration -> . type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON
    (92) empty -> .
    (13) type_specifier -> . INT
    (14) type_specifier -> . VOID
    (15) type_specifier -> . STRING

    RBLOCK          reduce using rule 92 (empty -> .)
    SEMICOLON       reduce using rule 92 (empty -> .)
    COUT            reduce using rule 92 (empty -> .)
    CIN             reduce using rule 92 (empty -> .)
    ID              reduce using rule 92 (empty -> .)
    PLUSPLUS        reduce using rule 92 (empty -> .)
    MINUSMINUS      reduce using rule 92 (empty -> .)
    LBLOCK          reduce using rule 92 (empty -> .)
    IF              reduce using rule 92 (empty -> .)
    WHILE           reduce using rule 92 (empty -> .)
    FOR             reduce using rule 92 (empty -> .)
    RETURN          reduce using rule 92 (empty -> .)
    LPAREN          reduce using rule 92 (empty -> .)
    NUMBER          reduce using rule 92 (empty -> .)
    INT             shift and go to state 9
    VOID            shift and go to state 10
    STRING          shift and go to state 11

    statement_list                 shift and go to state 91
    var_declaration                shift and go to state 92
    empty                          shift and go to state 93
    type_specifier                 shift and go to state 94

state 80

    (26) local_declarations -> empty .

    INT             reduce using rule 26 (local_declarations -> empty .)
    VOID            reduce using rule 26 (local_declarations -> empty .)
    STRING          reduce using rule 26 (local_declarations -> empty .)
    RBLOCK          reduce using rule 26 (local_declarations -> empty .)
    SEMICOLON       reduce using rule 26 (local_declarations -> empty .)
    COUT            reduce using rule 26 (local_declarations -> empty .)
    CIN             reduce using rule 26 (local_declarations -> empty .)
    ID              reduce using rule 26 (local_declarations -> empty .)
    PLUSPLUS        reduce using rule 26 (local_declarations -> empty .)
    MINUSMINUS      reduce using rule 26 (local_declarations -> empty .)
    LBLOCK          reduce using rule 26 (local_declarations -> empty .)
    IF              reduce using rule 26 (local_declarations -> empty .)
    WHILE           reduce using rule 26 (local_declarations -> empty .)
    FOR             reduce using rule 26 (local_declarations -> empty .)
    RETURN          reduce using rule 26 (local_declarations -> empty .)
    LPAREN          reduce using rule 26 (local_declarations -> empty .)
    NUMBER          reduce using rule 26 (local_declarations -> empty .)


state 81

    (87) call -> ID LPAREN args . RPAREN

    RPAREN          shift and go to state 95


state 82

    (88) args -> args_list .
    (90) args_list -> args_list . COMMA expression

    RPAREN          reduce using rule 88 (args -> args_list .)
    COMMA           shift and go to state 96


state 83

    (89) args -> empty .

    RPAREN          reduce using rule 89 (args -> empty .)


state 84

    (91) args_list -> expression .

    COMMA           reduce using rule 91 (args_list -> expression .)
    RPAREN          reduce using rule 91 (args_list -> expression .)


state 85

    (62) expression -> var EQUAL expression .

    RBRACKET        reduce using rule 62 (expression -> var EQUAL expression .)
    RPAREN          reduce using rule 62 (expression -> var EQUAL expression .)
    COMMA           reduce using rule 62 (expression -> var EQUAL expression .)
    SEMICOLON       reduce using rule 62 (expression -> var EQUAL expression .)


state 86

    (66) simple_expression -> additive_expression relop additive_expression .
    (75) additive_expression -> additive_expression . addop term
    (77) addop -> . PLUS
    (78) addop -> . MINUS

    RBRACKET        reduce using rule 66 (simple_expression -> additive_expression relop additive_expression .)
    RPAREN          reduce using rule 66 (simple_expression -> additive_expression relop additive_expression .)
    COMMA           reduce using rule 66 (simple_expression -> additive_expression relop additive_expression .)
    SEMICOLON       reduce using rule 66 (simple_expression -> additive_expression relop additive_expression .)
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73

    addop                          shift and go to state 64

state 87

    (84) factor -> var .

    TIMES           reduce using rule 84 (factor -> var .)
    DIVIDE          reduce using rule 84 (factor -> var .)
    PLUS            reduce using rule 84 (factor -> var .)
    MINUS           reduce using rule 84 (factor -> var .)
    RBRACKET        reduce using rule 84 (factor -> var .)
    RPAREN          reduce using rule 84 (factor -> var .)
    COMMA           reduce using rule 84 (factor -> var .)
    SEMICOLON       reduce using rule 84 (factor -> var .)
    LESS            reduce using rule 84 (factor -> var .)
    LESSEQUAL       reduce using rule 84 (factor -> var .)
    GREATER         reduce using rule 84 (factor -> var .)
    GREATEREQUAL    reduce using rule 84 (factor -> var .)
    DEQUAL          reduce using rule 84 (factor -> var .)
    DISTINT         reduce using rule 84 (factor -> var .)
    QUOTES          reduce using rule 84 (factor -> var .)


state 88

    (75) additive_expression -> additive_expression addop term .
    (79) term -> term . mulop factor
    (81) mulop -> . TIMES
    (82) mulop -> . DIVIDE

    LESS            reduce using rule 75 (additive_expression -> additive_expression addop term .)
    LESSEQUAL       reduce using rule 75 (additive_expression -> additive_expression addop term .)
    GREATER         reduce using rule 75 (additive_expression -> additive_expression addop term .)
    GREATEREQUAL    reduce using rule 75 (additive_expression -> additive_expression addop term .)
    DEQUAL          reduce using rule 75 (additive_expression -> additive_expression addop term .)
    DISTINT         reduce using rule 75 (additive_expression -> additive_expression addop term .)
    QUOTES          reduce using rule 75 (additive_expression -> additive_expression addop term .)
    PLUS            reduce using rule 75 (additive_expression -> additive_expression addop term .)
    MINUS           reduce using rule 75 (additive_expression -> additive_expression addop term .)
    RBRACKET        reduce using rule 75 (additive_expression -> additive_expression addop term .)
    RPAREN          reduce using rule 75 (additive_expression -> additive_expression addop term .)
    COMMA           reduce using rule 75 (additive_expression -> additive_expression addop term .)
    SEMICOLON       reduce using rule 75 (additive_expression -> additive_expression addop term .)
    TIMES           shift and go to state 75
    DIVIDE          shift and go to state 76

    mulop                          shift and go to state 74

state 89

    (79) term -> term mulop factor .

    TIMES           reduce using rule 79 (term -> term mulop factor .)
    DIVIDE          reduce using rule 79 (term -> term mulop factor .)
    LESS            reduce using rule 79 (term -> term mulop factor .)
    LESSEQUAL       reduce using rule 79 (term -> term mulop factor .)
    GREATER         reduce using rule 79 (term -> term mulop factor .)
    GREATEREQUAL    reduce using rule 79 (term -> term mulop factor .)
    DEQUAL          reduce using rule 79 (term -> term mulop factor .)
    DISTINT         reduce using rule 79 (term -> term mulop factor .)
    QUOTES          reduce using rule 79 (term -> term mulop factor .)
    PLUS            reduce using rule 79 (term -> term mulop factor .)
    MINUS           reduce using rule 79 (term -> term mulop factor .)
    RBRACKET        reduce using rule 79 (term -> term mulop factor .)
    RPAREN          reduce using rule 79 (term -> term mulop factor .)
    COMMA           reduce using rule 79 (term -> term mulop factor .)
    SEMICOLON       reduce using rule 79 (term -> term mulop factor .)


state 90

    (83) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 83 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 83 (factor -> LPAREN expression RPAREN .)
    LESS            reduce using rule 83 (factor -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 83 (factor -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 83 (factor -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 83 (factor -> LPAREN expression RPAREN .)
    DEQUAL          reduce using rule 83 (factor -> LPAREN expression RPAREN .)
    DISTINT         reduce using rule 83 (factor -> LPAREN expression RPAREN .)
    QUOTES          reduce using rule 83 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 83 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 83 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 83 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 83 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 83 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 83 (factor -> LPAREN expression RPAREN .)


state 91

    (24) compount_stmt -> LBLOCK local_declarations statement_list . RBLOCK
    (27) statement_list -> statement_list . statement
    (29) statement -> . expression_stmt
    (30) statement -> . compount_stmt
    (31) statement -> . selection_stmt
    (32) statement -> . iteration_stmt
    (33) statement -> . return_stmt
    (34) expression_stmt -> . expression SEMICOLON
    (35) expression_stmt -> . SEMICOLON
    (36) expression_stmt -> . COUT LGREATER QUOTES ID QUOTES SEMICOLON
    (37) expression_stmt -> . COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON
    (38) expression_stmt -> . COUT LGREATER STRING SEMICOLON
    (39) expression_stmt -> . COUT LGREATER STRING LGREATER ENDL SEMICOLON
    (40) expression_stmt -> . COUT LGREATER var SEMICOLON
    (41) expression_stmt -> . COUT LGREATER var LGREATER ENDL SEMICOLON
    (42) expression_stmt -> . COUT LGREATER var LGREATER var SEMICOLON
    (43) expression_stmt -> . COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON
    (44) expression_stmt -> . CIN RGREATER var SEMICOLON
    (45) expression_stmt -> . CIN RGREATER var RGREATER var SEMICOLON
    (46) expression_stmt -> . CIN POINT GET LPAREN RPAREN SEMICOLON
    (47) expression_stmt -> . ID PLUSPLUS
    (48) expression_stmt -> . PLUSPLUS ID
    (49) expression_stmt -> . ID MINUSMINUS
    (50) expression_stmt -> . MINUSMINUS ID
    (24) compount_stmt -> . LBLOCK local_declarations statement_list RBLOCK
    (51) selection_stmt -> . IF LPAREN expression RPAREN statement
    (52) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (53) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (54) iteration_stmt -> .
    (55) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (56) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (57) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (58) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (59) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement
    (60) return_stmt -> . RETURN SEMICOLON
    (61) return_stmt -> . RETURN expression SEMICOLON
    (62) expression -> . var EQUAL expression
    (63) expression -> . simple_expression
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET
    (66) simple_expression -> . additive_expression relop additive_expression
    (67) simple_expression -> . additive_expression
    (75) additive_expression -> . additive_expression addop term
    (76) additive_expression -> . term
    (79) term -> . term mulop factor
    (80) term -> . factor
    (83) factor -> . LPAREN expression RPAREN
    (84) factor -> . var
    (85) factor -> . call
    (86) factor -> . NUMBER
    (87) call -> . ID LPAREN args RPAREN

  ! shift/reduce conflict for RBLOCK resolved as shift
  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for COUT resolved as shift
  ! shift/reduce conflict for CIN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
    RBLOCK          shift and go to state 97
    SEMICOLON       shift and go to state 105
    COUT            shift and go to state 106
    CIN             shift and go to state 108
    ID              shift and go to state 107
    PLUSPLUS        shift and go to state 109
    MINUSMINUS      shift and go to state 110
    LBLOCK          shift and go to state 58
    IF              shift and go to state 111
    WHILE           shift and go to state 112
    FOR             shift and go to state 113
    RETURN          shift and go to state 114
    LPAREN          shift and go to state 52
    NUMBER          shift and go to state 54

  ! RBLOCK          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! SEMICOLON       [ reduce using rule 54 (iteration_stmt -> .) ]
  ! COUT            [ reduce using rule 54 (iteration_stmt -> .) ]
  ! CIN             [ reduce using rule 54 (iteration_stmt -> .) ]
  ! ID              [ reduce using rule 54 (iteration_stmt -> .) ]
  ! PLUSPLUS        [ reduce using rule 54 (iteration_stmt -> .) ]
  ! MINUSMINUS      [ reduce using rule 54 (iteration_stmt -> .) ]
  ! LBLOCK          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! IF              [ reduce using rule 54 (iteration_stmt -> .) ]
  ! WHILE           [ reduce using rule 54 (iteration_stmt -> .) ]
  ! FOR             [ reduce using rule 54 (iteration_stmt -> .) ]
  ! RETURN          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! LPAREN          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! NUMBER          [ reduce using rule 54 (iteration_stmt -> .) ]

    statement                      shift and go to state 98
    expression_stmt                shift and go to state 99
    compount_stmt                  shift and go to state 100
    selection_stmt                 shift and go to state 101
    iteration_stmt                 shift and go to state 102
    return_stmt                    shift and go to state 103
    expression                     shift and go to state 104
    var                            shift and go to state 47
    simple_expression              shift and go to state 48
    additive_expression            shift and go to state 49
    term                           shift and go to state 50
    factor                         shift and go to state 51
    call                           shift and go to state 53

state 92

    (25) local_declarations -> local_declarations var_declaration .

    INT             reduce using rule 25 (local_declarations -> local_declarations var_declaration .)
    VOID            reduce using rule 25 (local_declarations -> local_declarations var_declaration .)
    STRING          reduce using rule 25 (local_declarations -> local_declarations var_declaration .)
    RBLOCK          reduce using rule 25 (local_declarations -> local_declarations var_declaration .)
    SEMICOLON       reduce using rule 25 (local_declarations -> local_declarations var_declaration .)
    COUT            reduce using rule 25 (local_declarations -> local_declarations var_declaration .)
    CIN             reduce using rule 25 (local_declarations -> local_declarations var_declaration .)
    ID              reduce using rule 25 (local_declarations -> local_declarations var_declaration .)
    PLUSPLUS        reduce using rule 25 (local_declarations -> local_declarations var_declaration .)
    MINUSMINUS      reduce using rule 25 (local_declarations -> local_declarations var_declaration .)
    LBLOCK          reduce using rule 25 (local_declarations -> local_declarations var_declaration .)
    IF              reduce using rule 25 (local_declarations -> local_declarations var_declaration .)
    WHILE           reduce using rule 25 (local_declarations -> local_declarations var_declaration .)
    FOR             reduce using rule 25 (local_declarations -> local_declarations var_declaration .)
    RETURN          reduce using rule 25 (local_declarations -> local_declarations var_declaration .)
    LPAREN          reduce using rule 25 (local_declarations -> local_declarations var_declaration .)
    NUMBER          reduce using rule 25 (local_declarations -> local_declarations var_declaration .)


state 93

    (28) statement_list -> empty .

    RBLOCK          reduce using rule 28 (statement_list -> empty .)
    SEMICOLON       reduce using rule 28 (statement_list -> empty .)
    COUT            reduce using rule 28 (statement_list -> empty .)
    CIN             reduce using rule 28 (statement_list -> empty .)
    ID              reduce using rule 28 (statement_list -> empty .)
    PLUSPLUS        reduce using rule 28 (statement_list -> empty .)
    MINUSMINUS      reduce using rule 28 (statement_list -> empty .)
    LBLOCK          reduce using rule 28 (statement_list -> empty .)
    IF              reduce using rule 28 (statement_list -> empty .)
    WHILE           reduce using rule 28 (statement_list -> empty .)
    FOR             reduce using rule 28 (statement_list -> empty .)
    RETURN          reduce using rule 28 (statement_list -> empty .)
    LPAREN          reduce using rule 28 (statement_list -> empty .)
    NUMBER          reduce using rule 28 (statement_list -> empty .)


state 94

    (8) var_declaration -> type_specifier . ID SEMICOLON
    (9) var_declaration -> type_specifier . ID COMMA ID SEMICOLON
    (10) var_declaration -> type_specifier . ID EQUAL NUMBER SEMICOLON
    (11) var_declaration -> type_specifier . ID EQUAL var SEMICOLON
    (12) var_declaration -> type_specifier . ID LBRACKET NUMBER RBRACKET SEMICOLON

    ID              shift and go to state 115


state 95

    (87) call -> ID LPAREN args RPAREN .

    TIMES           reduce using rule 87 (call -> ID LPAREN args RPAREN .)
    DIVIDE          reduce using rule 87 (call -> ID LPAREN args RPAREN .)
    LESS            reduce using rule 87 (call -> ID LPAREN args RPAREN .)
    LESSEQUAL       reduce using rule 87 (call -> ID LPAREN args RPAREN .)
    GREATER         reduce using rule 87 (call -> ID LPAREN args RPAREN .)
    GREATEREQUAL    reduce using rule 87 (call -> ID LPAREN args RPAREN .)
    DEQUAL          reduce using rule 87 (call -> ID LPAREN args RPAREN .)
    DISTINT         reduce using rule 87 (call -> ID LPAREN args RPAREN .)
    QUOTES          reduce using rule 87 (call -> ID LPAREN args RPAREN .)
    PLUS            reduce using rule 87 (call -> ID LPAREN args RPAREN .)
    MINUS           reduce using rule 87 (call -> ID LPAREN args RPAREN .)
    RBRACKET        reduce using rule 87 (call -> ID LPAREN args RPAREN .)
    RPAREN          reduce using rule 87 (call -> ID LPAREN args RPAREN .)
    COMMA           reduce using rule 87 (call -> ID LPAREN args RPAREN .)
    SEMICOLON       reduce using rule 87 (call -> ID LPAREN args RPAREN .)


state 96

    (90) args_list -> args_list COMMA . expression
    (62) expression -> . var EQUAL expression
    (63) expression -> . simple_expression
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET
    (66) simple_expression -> . additive_expression relop additive_expression
    (67) simple_expression -> . additive_expression
    (75) additive_expression -> . additive_expression addop term
    (76) additive_expression -> . term
    (79) term -> . term mulop factor
    (80) term -> . factor
    (83) factor -> . LPAREN expression RPAREN
    (84) factor -> . var
    (85) factor -> . call
    (86) factor -> . NUMBER
    (87) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 45
    LPAREN          shift and go to state 52
    NUMBER          shift and go to state 54

    expression                     shift and go to state 116
    var                            shift and go to state 47
    simple_expression              shift and go to state 48
    additive_expression            shift and go to state 49
    term                           shift and go to state 50
    factor                         shift and go to state 51
    call                           shift and go to state 53

state 97

    (24) compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .

    HASH            reduce using rule 24 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    USING           reduce using rule 24 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    INT             reduce using rule 24 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    VOID            reduce using rule 24 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    STRING          reduce using rule 24 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    $end            reduce using rule 24 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    RBLOCK          reduce using rule 24 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    SEMICOLON       reduce using rule 24 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    COUT            reduce using rule 24 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    CIN             reduce using rule 24 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    ID              reduce using rule 24 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    PLUSPLUS        reduce using rule 24 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    MINUSMINUS      reduce using rule 24 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    LBLOCK          reduce using rule 24 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    IF              reduce using rule 24 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    WHILE           reduce using rule 24 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    FOR             reduce using rule 24 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    RETURN          reduce using rule 24 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    LPAREN          reduce using rule 24 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    NUMBER          reduce using rule 24 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)
    ELSE            reduce using rule 24 (compount_stmt -> LBLOCK local_declarations statement_list RBLOCK .)


state 98

    (27) statement_list -> statement_list statement .

    RBLOCK          reduce using rule 27 (statement_list -> statement_list statement .)
    SEMICOLON       reduce using rule 27 (statement_list -> statement_list statement .)
    COUT            reduce using rule 27 (statement_list -> statement_list statement .)
    CIN             reduce using rule 27 (statement_list -> statement_list statement .)
    ID              reduce using rule 27 (statement_list -> statement_list statement .)
    PLUSPLUS        reduce using rule 27 (statement_list -> statement_list statement .)
    MINUSMINUS      reduce using rule 27 (statement_list -> statement_list statement .)
    LBLOCK          reduce using rule 27 (statement_list -> statement_list statement .)
    IF              reduce using rule 27 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 27 (statement_list -> statement_list statement .)
    FOR             reduce using rule 27 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 27 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 27 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 27 (statement_list -> statement_list statement .)


state 99

    (29) statement -> expression_stmt .

    RBLOCK          reduce using rule 29 (statement -> expression_stmt .)
    SEMICOLON       reduce using rule 29 (statement -> expression_stmt .)
    COUT            reduce using rule 29 (statement -> expression_stmt .)
    CIN             reduce using rule 29 (statement -> expression_stmt .)
    ID              reduce using rule 29 (statement -> expression_stmt .)
    PLUSPLUS        reduce using rule 29 (statement -> expression_stmt .)
    MINUSMINUS      reduce using rule 29 (statement -> expression_stmt .)
    LBLOCK          reduce using rule 29 (statement -> expression_stmt .)
    IF              reduce using rule 29 (statement -> expression_stmt .)
    WHILE           reduce using rule 29 (statement -> expression_stmt .)
    FOR             reduce using rule 29 (statement -> expression_stmt .)
    RETURN          reduce using rule 29 (statement -> expression_stmt .)
    LPAREN          reduce using rule 29 (statement -> expression_stmt .)
    NUMBER          reduce using rule 29 (statement -> expression_stmt .)
    ELSE            reduce using rule 29 (statement -> expression_stmt .)


state 100

    (30) statement -> compount_stmt .

    RBLOCK          reduce using rule 30 (statement -> compount_stmt .)
    SEMICOLON       reduce using rule 30 (statement -> compount_stmt .)
    COUT            reduce using rule 30 (statement -> compount_stmt .)
    CIN             reduce using rule 30 (statement -> compount_stmt .)
    ID              reduce using rule 30 (statement -> compount_stmt .)
    PLUSPLUS        reduce using rule 30 (statement -> compount_stmt .)
    MINUSMINUS      reduce using rule 30 (statement -> compount_stmt .)
    LBLOCK          reduce using rule 30 (statement -> compount_stmt .)
    IF              reduce using rule 30 (statement -> compount_stmt .)
    WHILE           reduce using rule 30 (statement -> compount_stmt .)
    FOR             reduce using rule 30 (statement -> compount_stmt .)
    RETURN          reduce using rule 30 (statement -> compount_stmt .)
    LPAREN          reduce using rule 30 (statement -> compount_stmt .)
    NUMBER          reduce using rule 30 (statement -> compount_stmt .)
    ELSE            reduce using rule 30 (statement -> compount_stmt .)


state 101

    (31) statement -> selection_stmt .

    RBLOCK          reduce using rule 31 (statement -> selection_stmt .)
    SEMICOLON       reduce using rule 31 (statement -> selection_stmt .)
    COUT            reduce using rule 31 (statement -> selection_stmt .)
    CIN             reduce using rule 31 (statement -> selection_stmt .)
    ID              reduce using rule 31 (statement -> selection_stmt .)
    PLUSPLUS        reduce using rule 31 (statement -> selection_stmt .)
    MINUSMINUS      reduce using rule 31 (statement -> selection_stmt .)
    LBLOCK          reduce using rule 31 (statement -> selection_stmt .)
    IF              reduce using rule 31 (statement -> selection_stmt .)
    WHILE           reduce using rule 31 (statement -> selection_stmt .)
    FOR             reduce using rule 31 (statement -> selection_stmt .)
    RETURN          reduce using rule 31 (statement -> selection_stmt .)
    LPAREN          reduce using rule 31 (statement -> selection_stmt .)
    NUMBER          reduce using rule 31 (statement -> selection_stmt .)
    ELSE            reduce using rule 31 (statement -> selection_stmt .)


state 102

    (32) statement -> iteration_stmt .

    RBLOCK          reduce using rule 32 (statement -> iteration_stmt .)
    SEMICOLON       reduce using rule 32 (statement -> iteration_stmt .)
    COUT            reduce using rule 32 (statement -> iteration_stmt .)
    CIN             reduce using rule 32 (statement -> iteration_stmt .)
    ID              reduce using rule 32 (statement -> iteration_stmt .)
    PLUSPLUS        reduce using rule 32 (statement -> iteration_stmt .)
    MINUSMINUS      reduce using rule 32 (statement -> iteration_stmt .)
    LBLOCK          reduce using rule 32 (statement -> iteration_stmt .)
    IF              reduce using rule 32 (statement -> iteration_stmt .)
    WHILE           reduce using rule 32 (statement -> iteration_stmt .)
    FOR             reduce using rule 32 (statement -> iteration_stmt .)
    RETURN          reduce using rule 32 (statement -> iteration_stmt .)
    LPAREN          reduce using rule 32 (statement -> iteration_stmt .)
    NUMBER          reduce using rule 32 (statement -> iteration_stmt .)
    ELSE            reduce using rule 32 (statement -> iteration_stmt .)


state 103

    (33) statement -> return_stmt .

    RBLOCK          reduce using rule 33 (statement -> return_stmt .)
    SEMICOLON       reduce using rule 33 (statement -> return_stmt .)
    COUT            reduce using rule 33 (statement -> return_stmt .)
    CIN             reduce using rule 33 (statement -> return_stmt .)
    ID              reduce using rule 33 (statement -> return_stmt .)
    PLUSPLUS        reduce using rule 33 (statement -> return_stmt .)
    MINUSMINUS      reduce using rule 33 (statement -> return_stmt .)
    LBLOCK          reduce using rule 33 (statement -> return_stmt .)
    IF              reduce using rule 33 (statement -> return_stmt .)
    WHILE           reduce using rule 33 (statement -> return_stmt .)
    FOR             reduce using rule 33 (statement -> return_stmt .)
    RETURN          reduce using rule 33 (statement -> return_stmt .)
    LPAREN          reduce using rule 33 (statement -> return_stmt .)
    NUMBER          reduce using rule 33 (statement -> return_stmt .)
    ELSE            reduce using rule 33 (statement -> return_stmt .)


state 104

    (34) expression_stmt -> expression . SEMICOLON

    SEMICOLON       shift and go to state 117


state 105

    (35) expression_stmt -> SEMICOLON .

    RBLOCK          reduce using rule 35 (expression_stmt -> SEMICOLON .)
    SEMICOLON       reduce using rule 35 (expression_stmt -> SEMICOLON .)
    COUT            reduce using rule 35 (expression_stmt -> SEMICOLON .)
    CIN             reduce using rule 35 (expression_stmt -> SEMICOLON .)
    ID              reduce using rule 35 (expression_stmt -> SEMICOLON .)
    PLUSPLUS        reduce using rule 35 (expression_stmt -> SEMICOLON .)
    MINUSMINUS      reduce using rule 35 (expression_stmt -> SEMICOLON .)
    LBLOCK          reduce using rule 35 (expression_stmt -> SEMICOLON .)
    IF              reduce using rule 35 (expression_stmt -> SEMICOLON .)
    WHILE           reduce using rule 35 (expression_stmt -> SEMICOLON .)
    FOR             reduce using rule 35 (expression_stmt -> SEMICOLON .)
    RETURN          reduce using rule 35 (expression_stmt -> SEMICOLON .)
    LPAREN          reduce using rule 35 (expression_stmt -> SEMICOLON .)
    NUMBER          reduce using rule 35 (expression_stmt -> SEMICOLON .)
    ELSE            reduce using rule 35 (expression_stmt -> SEMICOLON .)


state 106

    (36) expression_stmt -> COUT . LGREATER QUOTES ID QUOTES SEMICOLON
    (37) expression_stmt -> COUT . LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON
    (38) expression_stmt -> COUT . LGREATER STRING SEMICOLON
    (39) expression_stmt -> COUT . LGREATER STRING LGREATER ENDL SEMICOLON
    (40) expression_stmt -> COUT . LGREATER var SEMICOLON
    (41) expression_stmt -> COUT . LGREATER var LGREATER ENDL SEMICOLON
    (42) expression_stmt -> COUT . LGREATER var LGREATER var SEMICOLON
    (43) expression_stmt -> COUT . LGREATER var LGREATER var LGREATER ENDL SEMICOLON

    LGREATER        shift and go to state 118


state 107

    (47) expression_stmt -> ID . PLUSPLUS
    (49) expression_stmt -> ID . MINUSMINUS
    (64) var -> ID .
    (65) var -> ID . LBRACKET expression RBRACKET
    (87) call -> ID . LPAREN args RPAREN

    PLUSPLUS        shift and go to state 119
    MINUSMINUS      shift and go to state 120
    EQUAL           reduce using rule 64 (var -> ID .)
    TIMES           reduce using rule 64 (var -> ID .)
    DIVIDE          reduce using rule 64 (var -> ID .)
    LESS            reduce using rule 64 (var -> ID .)
    LESSEQUAL       reduce using rule 64 (var -> ID .)
    GREATER         reduce using rule 64 (var -> ID .)
    GREATEREQUAL    reduce using rule 64 (var -> ID .)
    DEQUAL          reduce using rule 64 (var -> ID .)
    DISTINT         reduce using rule 64 (var -> ID .)
    QUOTES          reduce using rule 64 (var -> ID .)
    PLUS            reduce using rule 64 (var -> ID .)
    MINUS           reduce using rule 64 (var -> ID .)
    SEMICOLON       reduce using rule 64 (var -> ID .)
    LBRACKET        shift and go to state 38
    LPAREN          shift and go to state 60


state 108

    (44) expression_stmt -> CIN . RGREATER var SEMICOLON
    (45) expression_stmt -> CIN . RGREATER var RGREATER var SEMICOLON
    (46) expression_stmt -> CIN . POINT GET LPAREN RPAREN SEMICOLON

    RGREATER        shift and go to state 121
    POINT           shift and go to state 122


state 109

    (48) expression_stmt -> PLUSPLUS . ID

    ID              shift and go to state 123


state 110

    (50) expression_stmt -> MINUSMINUS . ID

    ID              shift and go to state 124


state 111

    (51) selection_stmt -> IF . LPAREN expression RPAREN statement
    (52) selection_stmt -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 125


state 112

    (53) iteration_stmt -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 126


state 113

    (55) iteration_stmt -> FOR . LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (56) iteration_stmt -> FOR . LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (57) iteration_stmt -> FOR . LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (58) iteration_stmt -> FOR . LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (59) iteration_stmt -> FOR . LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement

    LPAREN          shift and go to state 127


state 114

    (60) return_stmt -> RETURN . SEMICOLON
    (61) return_stmt -> RETURN . expression SEMICOLON
    (62) expression -> . var EQUAL expression
    (63) expression -> . simple_expression
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET
    (66) simple_expression -> . additive_expression relop additive_expression
    (67) simple_expression -> . additive_expression
    (75) additive_expression -> . additive_expression addop term
    (76) additive_expression -> . term
    (79) term -> . term mulop factor
    (80) term -> . factor
    (83) factor -> . LPAREN expression RPAREN
    (84) factor -> . var
    (85) factor -> . call
    (86) factor -> . NUMBER
    (87) call -> . ID LPAREN args RPAREN

    SEMICOLON       shift and go to state 128
    ID              shift and go to state 45
    LPAREN          shift and go to state 52
    NUMBER          shift and go to state 54

    expression                     shift and go to state 129
    var                            shift and go to state 47
    simple_expression              shift and go to state 48
    additive_expression            shift and go to state 49
    term                           shift and go to state 50
    factor                         shift and go to state 51
    call                           shift and go to state 53

state 115

    (8) var_declaration -> type_specifier ID . SEMICOLON
    (9) var_declaration -> type_specifier ID . COMMA ID SEMICOLON
    (10) var_declaration -> type_specifier ID . EQUAL NUMBER SEMICOLON
    (11) var_declaration -> type_specifier ID . EQUAL var SEMICOLON
    (12) var_declaration -> type_specifier ID . LBRACKET NUMBER RBRACKET SEMICOLON

    SEMICOLON       shift and go to state 18
    COMMA           shift and go to state 19
    EQUAL           shift and go to state 20
    LBRACKET        shift and go to state 21


state 116

    (90) args_list -> args_list COMMA expression .

    COMMA           reduce using rule 90 (args_list -> args_list COMMA expression .)
    RPAREN          reduce using rule 90 (args_list -> args_list COMMA expression .)


state 117

    (34) expression_stmt -> expression SEMICOLON .

    RBLOCK          reduce using rule 34 (expression_stmt -> expression SEMICOLON .)
    SEMICOLON       reduce using rule 34 (expression_stmt -> expression SEMICOLON .)
    COUT            reduce using rule 34 (expression_stmt -> expression SEMICOLON .)
    CIN             reduce using rule 34 (expression_stmt -> expression SEMICOLON .)
    ID              reduce using rule 34 (expression_stmt -> expression SEMICOLON .)
    PLUSPLUS        reduce using rule 34 (expression_stmt -> expression SEMICOLON .)
    MINUSMINUS      reduce using rule 34 (expression_stmt -> expression SEMICOLON .)
    LBLOCK          reduce using rule 34 (expression_stmt -> expression SEMICOLON .)
    IF              reduce using rule 34 (expression_stmt -> expression SEMICOLON .)
    WHILE           reduce using rule 34 (expression_stmt -> expression SEMICOLON .)
    FOR             reduce using rule 34 (expression_stmt -> expression SEMICOLON .)
    RETURN          reduce using rule 34 (expression_stmt -> expression SEMICOLON .)
    LPAREN          reduce using rule 34 (expression_stmt -> expression SEMICOLON .)
    NUMBER          reduce using rule 34 (expression_stmt -> expression SEMICOLON .)
    ELSE            reduce using rule 34 (expression_stmt -> expression SEMICOLON .)


state 118

    (36) expression_stmt -> COUT LGREATER . QUOTES ID QUOTES SEMICOLON
    (37) expression_stmt -> COUT LGREATER . QUOTES ID QUOTES LGREATER ENDL SEMICOLON
    (38) expression_stmt -> COUT LGREATER . STRING SEMICOLON
    (39) expression_stmt -> COUT LGREATER . STRING LGREATER ENDL SEMICOLON
    (40) expression_stmt -> COUT LGREATER . var SEMICOLON
    (41) expression_stmt -> COUT LGREATER . var LGREATER ENDL SEMICOLON
    (42) expression_stmt -> COUT LGREATER . var LGREATER var SEMICOLON
    (43) expression_stmt -> COUT LGREATER . var LGREATER var LGREATER ENDL SEMICOLON
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET

    QUOTES          shift and go to state 130
    STRING          shift and go to state 131
    ID              shift and go to state 26

    var                            shift and go to state 132

state 119

    (47) expression_stmt -> ID PLUSPLUS .

    RBLOCK          reduce using rule 47 (expression_stmt -> ID PLUSPLUS .)
    SEMICOLON       reduce using rule 47 (expression_stmt -> ID PLUSPLUS .)
    COUT            reduce using rule 47 (expression_stmt -> ID PLUSPLUS .)
    CIN             reduce using rule 47 (expression_stmt -> ID PLUSPLUS .)
    ID              reduce using rule 47 (expression_stmt -> ID PLUSPLUS .)
    PLUSPLUS        reduce using rule 47 (expression_stmt -> ID PLUSPLUS .)
    MINUSMINUS      reduce using rule 47 (expression_stmt -> ID PLUSPLUS .)
    LBLOCK          reduce using rule 47 (expression_stmt -> ID PLUSPLUS .)
    IF              reduce using rule 47 (expression_stmt -> ID PLUSPLUS .)
    WHILE           reduce using rule 47 (expression_stmt -> ID PLUSPLUS .)
    FOR             reduce using rule 47 (expression_stmt -> ID PLUSPLUS .)
    RETURN          reduce using rule 47 (expression_stmt -> ID PLUSPLUS .)
    LPAREN          reduce using rule 47 (expression_stmt -> ID PLUSPLUS .)
    NUMBER          reduce using rule 47 (expression_stmt -> ID PLUSPLUS .)
    ELSE            reduce using rule 47 (expression_stmt -> ID PLUSPLUS .)


state 120

    (49) expression_stmt -> ID MINUSMINUS .

    RBLOCK          reduce using rule 49 (expression_stmt -> ID MINUSMINUS .)
    SEMICOLON       reduce using rule 49 (expression_stmt -> ID MINUSMINUS .)
    COUT            reduce using rule 49 (expression_stmt -> ID MINUSMINUS .)
    CIN             reduce using rule 49 (expression_stmt -> ID MINUSMINUS .)
    ID              reduce using rule 49 (expression_stmt -> ID MINUSMINUS .)
    PLUSPLUS        reduce using rule 49 (expression_stmt -> ID MINUSMINUS .)
    MINUSMINUS      reduce using rule 49 (expression_stmt -> ID MINUSMINUS .)
    LBLOCK          reduce using rule 49 (expression_stmt -> ID MINUSMINUS .)
    IF              reduce using rule 49 (expression_stmt -> ID MINUSMINUS .)
    WHILE           reduce using rule 49 (expression_stmt -> ID MINUSMINUS .)
    FOR             reduce using rule 49 (expression_stmt -> ID MINUSMINUS .)
    RETURN          reduce using rule 49 (expression_stmt -> ID MINUSMINUS .)
    LPAREN          reduce using rule 49 (expression_stmt -> ID MINUSMINUS .)
    NUMBER          reduce using rule 49 (expression_stmt -> ID MINUSMINUS .)
    ELSE            reduce using rule 49 (expression_stmt -> ID MINUSMINUS .)


state 121

    (44) expression_stmt -> CIN RGREATER . var SEMICOLON
    (45) expression_stmt -> CIN RGREATER . var RGREATER var SEMICOLON
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 26

    var                            shift and go to state 133

state 122

    (46) expression_stmt -> CIN POINT . GET LPAREN RPAREN SEMICOLON

    GET             shift and go to state 134


state 123

    (48) expression_stmt -> PLUSPLUS ID .

    RBLOCK          reduce using rule 48 (expression_stmt -> PLUSPLUS ID .)
    SEMICOLON       reduce using rule 48 (expression_stmt -> PLUSPLUS ID .)
    COUT            reduce using rule 48 (expression_stmt -> PLUSPLUS ID .)
    CIN             reduce using rule 48 (expression_stmt -> PLUSPLUS ID .)
    ID              reduce using rule 48 (expression_stmt -> PLUSPLUS ID .)
    PLUSPLUS        reduce using rule 48 (expression_stmt -> PLUSPLUS ID .)
    MINUSMINUS      reduce using rule 48 (expression_stmt -> PLUSPLUS ID .)
    LBLOCK          reduce using rule 48 (expression_stmt -> PLUSPLUS ID .)
    IF              reduce using rule 48 (expression_stmt -> PLUSPLUS ID .)
    WHILE           reduce using rule 48 (expression_stmt -> PLUSPLUS ID .)
    FOR             reduce using rule 48 (expression_stmt -> PLUSPLUS ID .)
    RETURN          reduce using rule 48 (expression_stmt -> PLUSPLUS ID .)
    LPAREN          reduce using rule 48 (expression_stmt -> PLUSPLUS ID .)
    NUMBER          reduce using rule 48 (expression_stmt -> PLUSPLUS ID .)
    ELSE            reduce using rule 48 (expression_stmt -> PLUSPLUS ID .)


state 124

    (50) expression_stmt -> MINUSMINUS ID .

    RBLOCK          reduce using rule 50 (expression_stmt -> MINUSMINUS ID .)
    SEMICOLON       reduce using rule 50 (expression_stmt -> MINUSMINUS ID .)
    COUT            reduce using rule 50 (expression_stmt -> MINUSMINUS ID .)
    CIN             reduce using rule 50 (expression_stmt -> MINUSMINUS ID .)
    ID              reduce using rule 50 (expression_stmt -> MINUSMINUS ID .)
    PLUSPLUS        reduce using rule 50 (expression_stmt -> MINUSMINUS ID .)
    MINUSMINUS      reduce using rule 50 (expression_stmt -> MINUSMINUS ID .)
    LBLOCK          reduce using rule 50 (expression_stmt -> MINUSMINUS ID .)
    IF              reduce using rule 50 (expression_stmt -> MINUSMINUS ID .)
    WHILE           reduce using rule 50 (expression_stmt -> MINUSMINUS ID .)
    FOR             reduce using rule 50 (expression_stmt -> MINUSMINUS ID .)
    RETURN          reduce using rule 50 (expression_stmt -> MINUSMINUS ID .)
    LPAREN          reduce using rule 50 (expression_stmt -> MINUSMINUS ID .)
    NUMBER          reduce using rule 50 (expression_stmt -> MINUSMINUS ID .)
    ELSE            reduce using rule 50 (expression_stmt -> MINUSMINUS ID .)


state 125

    (51) selection_stmt -> IF LPAREN . expression RPAREN statement
    (52) selection_stmt -> IF LPAREN . expression RPAREN statement ELSE statement
    (62) expression -> . var EQUAL expression
    (63) expression -> . simple_expression
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET
    (66) simple_expression -> . additive_expression relop additive_expression
    (67) simple_expression -> . additive_expression
    (75) additive_expression -> . additive_expression addop term
    (76) additive_expression -> . term
    (79) term -> . term mulop factor
    (80) term -> . factor
    (83) factor -> . LPAREN expression RPAREN
    (84) factor -> . var
    (85) factor -> . call
    (86) factor -> . NUMBER
    (87) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 45
    LPAREN          shift and go to state 52
    NUMBER          shift and go to state 54

    expression                     shift and go to state 135
    var                            shift and go to state 47
    simple_expression              shift and go to state 48
    additive_expression            shift and go to state 49
    term                           shift and go to state 50
    factor                         shift and go to state 51
    call                           shift and go to state 53

state 126

    (53) iteration_stmt -> WHILE LPAREN . expression RPAREN statement
    (62) expression -> . var EQUAL expression
    (63) expression -> . simple_expression
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET
    (66) simple_expression -> . additive_expression relop additive_expression
    (67) simple_expression -> . additive_expression
    (75) additive_expression -> . additive_expression addop term
    (76) additive_expression -> . term
    (79) term -> . term mulop factor
    (80) term -> . factor
    (83) factor -> . LPAREN expression RPAREN
    (84) factor -> . var
    (85) factor -> . call
    (86) factor -> . NUMBER
    (87) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 45
    LPAREN          shift and go to state 52
    NUMBER          shift and go to state 54

    expression                     shift and go to state 136
    var                            shift and go to state 47
    simple_expression              shift and go to state 48
    additive_expression            shift and go to state 49
    term                           shift and go to state 50
    factor                         shift and go to state 51
    call                           shift and go to state 53

state 127

    (55) iteration_stmt -> FOR LPAREN . type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (56) iteration_stmt -> FOR LPAREN . type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (57) iteration_stmt -> FOR LPAREN . type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (58) iteration_stmt -> FOR LPAREN . type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (59) iteration_stmt -> FOR LPAREN . type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement
    (13) type_specifier -> . INT
    (14) type_specifier -> . VOID
    (15) type_specifier -> . STRING

    INT             shift and go to state 9
    VOID            shift and go to state 10
    STRING          shift and go to state 11

    type_specifier                 shift and go to state 137

state 128

    (60) return_stmt -> RETURN SEMICOLON .

    RBLOCK          reduce using rule 60 (return_stmt -> RETURN SEMICOLON .)
    SEMICOLON       reduce using rule 60 (return_stmt -> RETURN SEMICOLON .)
    COUT            reduce using rule 60 (return_stmt -> RETURN SEMICOLON .)
    CIN             reduce using rule 60 (return_stmt -> RETURN SEMICOLON .)
    ID              reduce using rule 60 (return_stmt -> RETURN SEMICOLON .)
    PLUSPLUS        reduce using rule 60 (return_stmt -> RETURN SEMICOLON .)
    MINUSMINUS      reduce using rule 60 (return_stmt -> RETURN SEMICOLON .)
    LBLOCK          reduce using rule 60 (return_stmt -> RETURN SEMICOLON .)
    IF              reduce using rule 60 (return_stmt -> RETURN SEMICOLON .)
    WHILE           reduce using rule 60 (return_stmt -> RETURN SEMICOLON .)
    FOR             reduce using rule 60 (return_stmt -> RETURN SEMICOLON .)
    RETURN          reduce using rule 60 (return_stmt -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 60 (return_stmt -> RETURN SEMICOLON .)
    NUMBER          reduce using rule 60 (return_stmt -> RETURN SEMICOLON .)
    ELSE            reduce using rule 60 (return_stmt -> RETURN SEMICOLON .)


state 129

    (61) return_stmt -> RETURN expression . SEMICOLON

    SEMICOLON       shift and go to state 138


state 130

    (36) expression_stmt -> COUT LGREATER QUOTES . ID QUOTES SEMICOLON
    (37) expression_stmt -> COUT LGREATER QUOTES . ID QUOTES LGREATER ENDL SEMICOLON

    ID              shift and go to state 139


state 131

    (38) expression_stmt -> COUT LGREATER STRING . SEMICOLON
    (39) expression_stmt -> COUT LGREATER STRING . LGREATER ENDL SEMICOLON

    SEMICOLON       shift and go to state 141
    LGREATER        shift and go to state 140


state 132

    (40) expression_stmt -> COUT LGREATER var . SEMICOLON
    (41) expression_stmt -> COUT LGREATER var . LGREATER ENDL SEMICOLON
    (42) expression_stmt -> COUT LGREATER var . LGREATER var SEMICOLON
    (43) expression_stmt -> COUT LGREATER var . LGREATER var LGREATER ENDL SEMICOLON

    SEMICOLON       shift and go to state 143
    LGREATER        shift and go to state 142


state 133

    (44) expression_stmt -> CIN RGREATER var . SEMICOLON
    (45) expression_stmt -> CIN RGREATER var . RGREATER var SEMICOLON

    SEMICOLON       shift and go to state 145
    RGREATER        shift and go to state 144


state 134

    (46) expression_stmt -> CIN POINT GET . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 146


state 135

    (51) selection_stmt -> IF LPAREN expression . RPAREN statement
    (52) selection_stmt -> IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN          shift and go to state 147


state 136

    (53) iteration_stmt -> WHILE LPAREN expression . RPAREN statement

    RPAREN          shift and go to state 148


state 137

    (55) iteration_stmt -> FOR LPAREN type_specifier . expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (56) iteration_stmt -> FOR LPAREN type_specifier . expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (57) iteration_stmt -> FOR LPAREN type_specifier . expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (58) iteration_stmt -> FOR LPAREN type_specifier . expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (59) iteration_stmt -> FOR LPAREN type_specifier . expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement
    (62) expression -> . var EQUAL expression
    (63) expression -> . simple_expression
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET
    (66) simple_expression -> . additive_expression relop additive_expression
    (67) simple_expression -> . additive_expression
    (75) additive_expression -> . additive_expression addop term
    (76) additive_expression -> . term
    (79) term -> . term mulop factor
    (80) term -> . factor
    (83) factor -> . LPAREN expression RPAREN
    (84) factor -> . var
    (85) factor -> . call
    (86) factor -> . NUMBER
    (87) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 45
    LPAREN          shift and go to state 52
    NUMBER          shift and go to state 54

    expression                     shift and go to state 149
    var                            shift and go to state 47
    simple_expression              shift and go to state 48
    additive_expression            shift and go to state 49
    term                           shift and go to state 50
    factor                         shift and go to state 51
    call                           shift and go to state 53

state 138

    (61) return_stmt -> RETURN expression SEMICOLON .

    RBLOCK          reduce using rule 61 (return_stmt -> RETURN expression SEMICOLON .)
    SEMICOLON       reduce using rule 61 (return_stmt -> RETURN expression SEMICOLON .)
    COUT            reduce using rule 61 (return_stmt -> RETURN expression SEMICOLON .)
    CIN             reduce using rule 61 (return_stmt -> RETURN expression SEMICOLON .)
    ID              reduce using rule 61 (return_stmt -> RETURN expression SEMICOLON .)
    PLUSPLUS        reduce using rule 61 (return_stmt -> RETURN expression SEMICOLON .)
    MINUSMINUS      reduce using rule 61 (return_stmt -> RETURN expression SEMICOLON .)
    LBLOCK          reduce using rule 61 (return_stmt -> RETURN expression SEMICOLON .)
    IF              reduce using rule 61 (return_stmt -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 61 (return_stmt -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 61 (return_stmt -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 61 (return_stmt -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 61 (return_stmt -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 61 (return_stmt -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 61 (return_stmt -> RETURN expression SEMICOLON .)


state 139

    (36) expression_stmt -> COUT LGREATER QUOTES ID . QUOTES SEMICOLON
    (37) expression_stmt -> COUT LGREATER QUOTES ID . QUOTES LGREATER ENDL SEMICOLON

    QUOTES          shift and go to state 150


state 140

    (39) expression_stmt -> COUT LGREATER STRING LGREATER . ENDL SEMICOLON

    ENDL            shift and go to state 151


state 141

    (38) expression_stmt -> COUT LGREATER STRING SEMICOLON .

    RBLOCK          reduce using rule 38 (expression_stmt -> COUT LGREATER STRING SEMICOLON .)
    SEMICOLON       reduce using rule 38 (expression_stmt -> COUT LGREATER STRING SEMICOLON .)
    COUT            reduce using rule 38 (expression_stmt -> COUT LGREATER STRING SEMICOLON .)
    CIN             reduce using rule 38 (expression_stmt -> COUT LGREATER STRING SEMICOLON .)
    ID              reduce using rule 38 (expression_stmt -> COUT LGREATER STRING SEMICOLON .)
    PLUSPLUS        reduce using rule 38 (expression_stmt -> COUT LGREATER STRING SEMICOLON .)
    MINUSMINUS      reduce using rule 38 (expression_stmt -> COUT LGREATER STRING SEMICOLON .)
    LBLOCK          reduce using rule 38 (expression_stmt -> COUT LGREATER STRING SEMICOLON .)
    IF              reduce using rule 38 (expression_stmt -> COUT LGREATER STRING SEMICOLON .)
    WHILE           reduce using rule 38 (expression_stmt -> COUT LGREATER STRING SEMICOLON .)
    FOR             reduce using rule 38 (expression_stmt -> COUT LGREATER STRING SEMICOLON .)
    RETURN          reduce using rule 38 (expression_stmt -> COUT LGREATER STRING SEMICOLON .)
    LPAREN          reduce using rule 38 (expression_stmt -> COUT LGREATER STRING SEMICOLON .)
    NUMBER          reduce using rule 38 (expression_stmt -> COUT LGREATER STRING SEMICOLON .)
    ELSE            reduce using rule 38 (expression_stmt -> COUT LGREATER STRING SEMICOLON .)


state 142

    (41) expression_stmt -> COUT LGREATER var LGREATER . ENDL SEMICOLON
    (42) expression_stmt -> COUT LGREATER var LGREATER . var SEMICOLON
    (43) expression_stmt -> COUT LGREATER var LGREATER . var LGREATER ENDL SEMICOLON
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET

    ENDL            shift and go to state 153
    ID              shift and go to state 26

    var                            shift and go to state 152

state 143

    (40) expression_stmt -> COUT LGREATER var SEMICOLON .

    RBLOCK          reduce using rule 40 (expression_stmt -> COUT LGREATER var SEMICOLON .)
    SEMICOLON       reduce using rule 40 (expression_stmt -> COUT LGREATER var SEMICOLON .)
    COUT            reduce using rule 40 (expression_stmt -> COUT LGREATER var SEMICOLON .)
    CIN             reduce using rule 40 (expression_stmt -> COUT LGREATER var SEMICOLON .)
    ID              reduce using rule 40 (expression_stmt -> COUT LGREATER var SEMICOLON .)
    PLUSPLUS        reduce using rule 40 (expression_stmt -> COUT LGREATER var SEMICOLON .)
    MINUSMINUS      reduce using rule 40 (expression_stmt -> COUT LGREATER var SEMICOLON .)
    LBLOCK          reduce using rule 40 (expression_stmt -> COUT LGREATER var SEMICOLON .)
    IF              reduce using rule 40 (expression_stmt -> COUT LGREATER var SEMICOLON .)
    WHILE           reduce using rule 40 (expression_stmt -> COUT LGREATER var SEMICOLON .)
    FOR             reduce using rule 40 (expression_stmt -> COUT LGREATER var SEMICOLON .)
    RETURN          reduce using rule 40 (expression_stmt -> COUT LGREATER var SEMICOLON .)
    LPAREN          reduce using rule 40 (expression_stmt -> COUT LGREATER var SEMICOLON .)
    NUMBER          reduce using rule 40 (expression_stmt -> COUT LGREATER var SEMICOLON .)
    ELSE            reduce using rule 40 (expression_stmt -> COUT LGREATER var SEMICOLON .)


state 144

    (45) expression_stmt -> CIN RGREATER var RGREATER . var SEMICOLON
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 26

    var                            shift and go to state 154

state 145

    (44) expression_stmt -> CIN RGREATER var SEMICOLON .

    RBLOCK          reduce using rule 44 (expression_stmt -> CIN RGREATER var SEMICOLON .)
    SEMICOLON       reduce using rule 44 (expression_stmt -> CIN RGREATER var SEMICOLON .)
    COUT            reduce using rule 44 (expression_stmt -> CIN RGREATER var SEMICOLON .)
    CIN             reduce using rule 44 (expression_stmt -> CIN RGREATER var SEMICOLON .)
    ID              reduce using rule 44 (expression_stmt -> CIN RGREATER var SEMICOLON .)
    PLUSPLUS        reduce using rule 44 (expression_stmt -> CIN RGREATER var SEMICOLON .)
    MINUSMINUS      reduce using rule 44 (expression_stmt -> CIN RGREATER var SEMICOLON .)
    LBLOCK          reduce using rule 44 (expression_stmt -> CIN RGREATER var SEMICOLON .)
    IF              reduce using rule 44 (expression_stmt -> CIN RGREATER var SEMICOLON .)
    WHILE           reduce using rule 44 (expression_stmt -> CIN RGREATER var SEMICOLON .)
    FOR             reduce using rule 44 (expression_stmt -> CIN RGREATER var SEMICOLON .)
    RETURN          reduce using rule 44 (expression_stmt -> CIN RGREATER var SEMICOLON .)
    LPAREN          reduce using rule 44 (expression_stmt -> CIN RGREATER var SEMICOLON .)
    NUMBER          reduce using rule 44 (expression_stmt -> CIN RGREATER var SEMICOLON .)
    ELSE            reduce using rule 44 (expression_stmt -> CIN RGREATER var SEMICOLON .)


state 146

    (46) expression_stmt -> CIN POINT GET LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 155


state 147

    (51) selection_stmt -> IF LPAREN expression RPAREN . statement
    (52) selection_stmt -> IF LPAREN expression RPAREN . statement ELSE statement
    (29) statement -> . expression_stmt
    (30) statement -> . compount_stmt
    (31) statement -> . selection_stmt
    (32) statement -> . iteration_stmt
    (33) statement -> . return_stmt
    (34) expression_stmt -> . expression SEMICOLON
    (35) expression_stmt -> . SEMICOLON
    (36) expression_stmt -> . COUT LGREATER QUOTES ID QUOTES SEMICOLON
    (37) expression_stmt -> . COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON
    (38) expression_stmt -> . COUT LGREATER STRING SEMICOLON
    (39) expression_stmt -> . COUT LGREATER STRING LGREATER ENDL SEMICOLON
    (40) expression_stmt -> . COUT LGREATER var SEMICOLON
    (41) expression_stmt -> . COUT LGREATER var LGREATER ENDL SEMICOLON
    (42) expression_stmt -> . COUT LGREATER var LGREATER var SEMICOLON
    (43) expression_stmt -> . COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON
    (44) expression_stmt -> . CIN RGREATER var SEMICOLON
    (45) expression_stmt -> . CIN RGREATER var RGREATER var SEMICOLON
    (46) expression_stmt -> . CIN POINT GET LPAREN RPAREN SEMICOLON
    (47) expression_stmt -> . ID PLUSPLUS
    (48) expression_stmt -> . PLUSPLUS ID
    (49) expression_stmt -> . ID MINUSMINUS
    (50) expression_stmt -> . MINUSMINUS ID
    (24) compount_stmt -> . LBLOCK local_declarations statement_list RBLOCK
    (51) selection_stmt -> . IF LPAREN expression RPAREN statement
    (52) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (53) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (54) iteration_stmt -> .
    (55) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (56) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (57) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (58) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (59) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement
    (60) return_stmt -> . RETURN SEMICOLON
    (61) return_stmt -> . RETURN expression SEMICOLON
    (62) expression -> . var EQUAL expression
    (63) expression -> . simple_expression
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET
    (66) simple_expression -> . additive_expression relop additive_expression
    (67) simple_expression -> . additive_expression
    (75) additive_expression -> . additive_expression addop term
    (76) additive_expression -> . term
    (79) term -> . term mulop factor
    (80) term -> . factor
    (83) factor -> . LPAREN expression RPAREN
    (84) factor -> . var
    (85) factor -> . call
    (86) factor -> . NUMBER
    (87) call -> . ID LPAREN args RPAREN

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for COUT resolved as shift
  ! shift/reduce conflict for CIN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
    SEMICOLON       shift and go to state 105
    COUT            shift and go to state 106
    CIN             shift and go to state 108
    ID              shift and go to state 107
    PLUSPLUS        shift and go to state 109
    MINUSMINUS      shift and go to state 110
    LBLOCK          shift and go to state 58
    IF              shift and go to state 111
    WHILE           shift and go to state 112
    ELSE            reduce using rule 54 (iteration_stmt -> .)
    RBLOCK          reduce using rule 54 (iteration_stmt -> .)
    FOR             shift and go to state 113
    RETURN          shift and go to state 114
    LPAREN          shift and go to state 52
    NUMBER          shift and go to state 54

  ! SEMICOLON       [ reduce using rule 54 (iteration_stmt -> .) ]
  ! COUT            [ reduce using rule 54 (iteration_stmt -> .) ]
  ! CIN             [ reduce using rule 54 (iteration_stmt -> .) ]
  ! ID              [ reduce using rule 54 (iteration_stmt -> .) ]
  ! PLUSPLUS        [ reduce using rule 54 (iteration_stmt -> .) ]
  ! MINUSMINUS      [ reduce using rule 54 (iteration_stmt -> .) ]
  ! LBLOCK          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! IF              [ reduce using rule 54 (iteration_stmt -> .) ]
  ! WHILE           [ reduce using rule 54 (iteration_stmt -> .) ]
  ! FOR             [ reduce using rule 54 (iteration_stmt -> .) ]
  ! RETURN          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! LPAREN          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! NUMBER          [ reduce using rule 54 (iteration_stmt -> .) ]

    expression                     shift and go to state 104
    statement                      shift and go to state 156
    expression_stmt                shift and go to state 99
    compount_stmt                  shift and go to state 100
    selection_stmt                 shift and go to state 101
    iteration_stmt                 shift and go to state 102
    return_stmt                    shift and go to state 103
    var                            shift and go to state 47
    simple_expression              shift and go to state 48
    additive_expression            shift and go to state 49
    term                           shift and go to state 50
    factor                         shift and go to state 51
    call                           shift and go to state 53

state 148

    (53) iteration_stmt -> WHILE LPAREN expression RPAREN . statement
    (29) statement -> . expression_stmt
    (30) statement -> . compount_stmt
    (31) statement -> . selection_stmt
    (32) statement -> . iteration_stmt
    (33) statement -> . return_stmt
    (34) expression_stmt -> . expression SEMICOLON
    (35) expression_stmt -> . SEMICOLON
    (36) expression_stmt -> . COUT LGREATER QUOTES ID QUOTES SEMICOLON
    (37) expression_stmt -> . COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON
    (38) expression_stmt -> . COUT LGREATER STRING SEMICOLON
    (39) expression_stmt -> . COUT LGREATER STRING LGREATER ENDL SEMICOLON
    (40) expression_stmt -> . COUT LGREATER var SEMICOLON
    (41) expression_stmt -> . COUT LGREATER var LGREATER ENDL SEMICOLON
    (42) expression_stmt -> . COUT LGREATER var LGREATER var SEMICOLON
    (43) expression_stmt -> . COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON
    (44) expression_stmt -> . CIN RGREATER var SEMICOLON
    (45) expression_stmt -> . CIN RGREATER var RGREATER var SEMICOLON
    (46) expression_stmt -> . CIN POINT GET LPAREN RPAREN SEMICOLON
    (47) expression_stmt -> . ID PLUSPLUS
    (48) expression_stmt -> . PLUSPLUS ID
    (49) expression_stmt -> . ID MINUSMINUS
    (50) expression_stmt -> . MINUSMINUS ID
    (24) compount_stmt -> . LBLOCK local_declarations statement_list RBLOCK
    (51) selection_stmt -> . IF LPAREN expression RPAREN statement
    (52) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (53) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (54) iteration_stmt -> .
    (55) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (56) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (57) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (58) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (59) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement
    (60) return_stmt -> . RETURN SEMICOLON
    (61) return_stmt -> . RETURN expression SEMICOLON
    (62) expression -> . var EQUAL expression
    (63) expression -> . simple_expression
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET
    (66) simple_expression -> . additive_expression relop additive_expression
    (67) simple_expression -> . additive_expression
    (75) additive_expression -> . additive_expression addop term
    (76) additive_expression -> . term
    (79) term -> . term mulop factor
    (80) term -> . factor
    (83) factor -> . LPAREN expression RPAREN
    (84) factor -> . var
    (85) factor -> . call
    (86) factor -> . NUMBER
    (87) call -> . ID LPAREN args RPAREN

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for COUT resolved as shift
  ! shift/reduce conflict for CIN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
    SEMICOLON       shift and go to state 105
    COUT            shift and go to state 106
    CIN             shift and go to state 108
    ID              shift and go to state 107
    PLUSPLUS        shift and go to state 109
    MINUSMINUS      shift and go to state 110
    LBLOCK          shift and go to state 58
    IF              shift and go to state 111
    WHILE           shift and go to state 112
    ELSE            reduce using rule 54 (iteration_stmt -> .)
    RBLOCK          reduce using rule 54 (iteration_stmt -> .)
    FOR             shift and go to state 113
    RETURN          shift and go to state 114
    LPAREN          shift and go to state 52
    NUMBER          shift and go to state 54

  ! SEMICOLON       [ reduce using rule 54 (iteration_stmt -> .) ]
  ! COUT            [ reduce using rule 54 (iteration_stmt -> .) ]
  ! CIN             [ reduce using rule 54 (iteration_stmt -> .) ]
  ! ID              [ reduce using rule 54 (iteration_stmt -> .) ]
  ! PLUSPLUS        [ reduce using rule 54 (iteration_stmt -> .) ]
  ! MINUSMINUS      [ reduce using rule 54 (iteration_stmt -> .) ]
  ! LBLOCK          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! IF              [ reduce using rule 54 (iteration_stmt -> .) ]
  ! WHILE           [ reduce using rule 54 (iteration_stmt -> .) ]
  ! FOR             [ reduce using rule 54 (iteration_stmt -> .) ]
  ! RETURN          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! LPAREN          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! NUMBER          [ reduce using rule 54 (iteration_stmt -> .) ]

    expression                     shift and go to state 104
    statement                      shift and go to state 157
    expression_stmt                shift and go to state 99
    compount_stmt                  shift and go to state 100
    selection_stmt                 shift and go to state 101
    iteration_stmt                 shift and go to state 102
    return_stmt                    shift and go to state 103
    var                            shift and go to state 47
    simple_expression              shift and go to state 48
    additive_expression            shift and go to state 49
    term                           shift and go to state 50
    factor                         shift and go to state 51
    call                           shift and go to state 53

state 149

    (55) iteration_stmt -> FOR LPAREN type_specifier expression . SEMICOLON expression SEMICOLON expression RPAREN statement
    (56) iteration_stmt -> FOR LPAREN type_specifier expression . SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (57) iteration_stmt -> FOR LPAREN type_specifier expression . SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (58) iteration_stmt -> FOR LPAREN type_specifier expression . SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (59) iteration_stmt -> FOR LPAREN type_specifier expression . SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement

    SEMICOLON       shift and go to state 158


state 150

    (36) expression_stmt -> COUT LGREATER QUOTES ID QUOTES . SEMICOLON
    (37) expression_stmt -> COUT LGREATER QUOTES ID QUOTES . LGREATER ENDL SEMICOLON

    SEMICOLON       shift and go to state 160
    LGREATER        shift and go to state 159


state 151

    (39) expression_stmt -> COUT LGREATER STRING LGREATER ENDL . SEMICOLON

    SEMICOLON       shift and go to state 161


state 152

    (42) expression_stmt -> COUT LGREATER var LGREATER var . SEMICOLON
    (43) expression_stmt -> COUT LGREATER var LGREATER var . LGREATER ENDL SEMICOLON

    SEMICOLON       shift and go to state 163
    LGREATER        shift and go to state 162


state 153

    (41) expression_stmt -> COUT LGREATER var LGREATER ENDL . SEMICOLON

    SEMICOLON       shift and go to state 164


state 154

    (45) expression_stmt -> CIN RGREATER var RGREATER var . SEMICOLON

    SEMICOLON       shift and go to state 165


state 155

    (46) expression_stmt -> CIN POINT GET LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 166


state 156

    (51) selection_stmt -> IF LPAREN expression RPAREN statement .
    (52) selection_stmt -> IF LPAREN expression RPAREN statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    RBLOCK          reduce using rule 51 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    SEMICOLON       reduce using rule 51 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    COUT            reduce using rule 51 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    CIN             reduce using rule 51 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    ID              reduce using rule 51 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    PLUSPLUS        reduce using rule 51 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    MINUSMINUS      reduce using rule 51 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    LBLOCK          reduce using rule 51 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 51 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 51 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 51 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 51 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 51 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 51 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 167

  ! ELSE            [ reduce using rule 51 (selection_stmt -> IF LPAREN expression RPAREN statement .) ]


state 157

    (53) iteration_stmt -> WHILE LPAREN expression RPAREN statement .

    RBLOCK          reduce using rule 53 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    SEMICOLON       reduce using rule 53 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    COUT            reduce using rule 53 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    CIN             reduce using rule 53 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ID              reduce using rule 53 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    PLUSPLUS        reduce using rule 53 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    MINUSMINUS      reduce using rule 53 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    LBLOCK          reduce using rule 53 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 53 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 53 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 53 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 53 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 53 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 53 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 53 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)


state 158

    (55) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON . expression SEMICOLON expression RPAREN statement
    (56) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON . expression SEMICOLON var PLUSPLUS RPAREN statement
    (57) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON . expression SEMICOLON PLUSPLUS var RPAREN statement
    (58) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON . expression SEMICOLON var MINUSMINUS RPAREN statement
    (59) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON . expression SEMICOLON MINUSMINUS var RPAREN statement
    (62) expression -> . var EQUAL expression
    (63) expression -> . simple_expression
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET
    (66) simple_expression -> . additive_expression relop additive_expression
    (67) simple_expression -> . additive_expression
    (75) additive_expression -> . additive_expression addop term
    (76) additive_expression -> . term
    (79) term -> . term mulop factor
    (80) term -> . factor
    (83) factor -> . LPAREN expression RPAREN
    (84) factor -> . var
    (85) factor -> . call
    (86) factor -> . NUMBER
    (87) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 45
    LPAREN          shift and go to state 52
    NUMBER          shift and go to state 54

    expression                     shift and go to state 168
    var                            shift and go to state 47
    simple_expression              shift and go to state 48
    additive_expression            shift and go to state 49
    term                           shift and go to state 50
    factor                         shift and go to state 51
    call                           shift and go to state 53

state 159

    (37) expression_stmt -> COUT LGREATER QUOTES ID QUOTES LGREATER . ENDL SEMICOLON

    ENDL            shift and go to state 169


state 160

    (36) expression_stmt -> COUT LGREATER QUOTES ID QUOTES SEMICOLON .

    RBLOCK          reduce using rule 36 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES SEMICOLON .)
    SEMICOLON       reduce using rule 36 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES SEMICOLON .)
    COUT            reduce using rule 36 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES SEMICOLON .)
    CIN             reduce using rule 36 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES SEMICOLON .)
    ID              reduce using rule 36 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES SEMICOLON .)
    PLUSPLUS        reduce using rule 36 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES SEMICOLON .)
    MINUSMINUS      reduce using rule 36 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES SEMICOLON .)
    LBLOCK          reduce using rule 36 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES SEMICOLON .)
    IF              reduce using rule 36 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES SEMICOLON .)
    WHILE           reduce using rule 36 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES SEMICOLON .)
    FOR             reduce using rule 36 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES SEMICOLON .)
    RETURN          reduce using rule 36 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES SEMICOLON .)
    LPAREN          reduce using rule 36 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES SEMICOLON .)
    NUMBER          reduce using rule 36 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES SEMICOLON .)
    ELSE            reduce using rule 36 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES SEMICOLON .)


state 161

    (39) expression_stmt -> COUT LGREATER STRING LGREATER ENDL SEMICOLON .

    RBLOCK          reduce using rule 39 (expression_stmt -> COUT LGREATER STRING LGREATER ENDL SEMICOLON .)
    SEMICOLON       reduce using rule 39 (expression_stmt -> COUT LGREATER STRING LGREATER ENDL SEMICOLON .)
    COUT            reduce using rule 39 (expression_stmt -> COUT LGREATER STRING LGREATER ENDL SEMICOLON .)
    CIN             reduce using rule 39 (expression_stmt -> COUT LGREATER STRING LGREATER ENDL SEMICOLON .)
    ID              reduce using rule 39 (expression_stmt -> COUT LGREATER STRING LGREATER ENDL SEMICOLON .)
    PLUSPLUS        reduce using rule 39 (expression_stmt -> COUT LGREATER STRING LGREATER ENDL SEMICOLON .)
    MINUSMINUS      reduce using rule 39 (expression_stmt -> COUT LGREATER STRING LGREATER ENDL SEMICOLON .)
    LBLOCK          reduce using rule 39 (expression_stmt -> COUT LGREATER STRING LGREATER ENDL SEMICOLON .)
    IF              reduce using rule 39 (expression_stmt -> COUT LGREATER STRING LGREATER ENDL SEMICOLON .)
    WHILE           reduce using rule 39 (expression_stmt -> COUT LGREATER STRING LGREATER ENDL SEMICOLON .)
    FOR             reduce using rule 39 (expression_stmt -> COUT LGREATER STRING LGREATER ENDL SEMICOLON .)
    RETURN          reduce using rule 39 (expression_stmt -> COUT LGREATER STRING LGREATER ENDL SEMICOLON .)
    LPAREN          reduce using rule 39 (expression_stmt -> COUT LGREATER STRING LGREATER ENDL SEMICOLON .)
    NUMBER          reduce using rule 39 (expression_stmt -> COUT LGREATER STRING LGREATER ENDL SEMICOLON .)
    ELSE            reduce using rule 39 (expression_stmt -> COUT LGREATER STRING LGREATER ENDL SEMICOLON .)


state 162

    (43) expression_stmt -> COUT LGREATER var LGREATER var LGREATER . ENDL SEMICOLON

    ENDL            shift and go to state 170


state 163

    (42) expression_stmt -> COUT LGREATER var LGREATER var SEMICOLON .

    RBLOCK          reduce using rule 42 (expression_stmt -> COUT LGREATER var LGREATER var SEMICOLON .)
    SEMICOLON       reduce using rule 42 (expression_stmt -> COUT LGREATER var LGREATER var SEMICOLON .)
    COUT            reduce using rule 42 (expression_stmt -> COUT LGREATER var LGREATER var SEMICOLON .)
    CIN             reduce using rule 42 (expression_stmt -> COUT LGREATER var LGREATER var SEMICOLON .)
    ID              reduce using rule 42 (expression_stmt -> COUT LGREATER var LGREATER var SEMICOLON .)
    PLUSPLUS        reduce using rule 42 (expression_stmt -> COUT LGREATER var LGREATER var SEMICOLON .)
    MINUSMINUS      reduce using rule 42 (expression_stmt -> COUT LGREATER var LGREATER var SEMICOLON .)
    LBLOCK          reduce using rule 42 (expression_stmt -> COUT LGREATER var LGREATER var SEMICOLON .)
    IF              reduce using rule 42 (expression_stmt -> COUT LGREATER var LGREATER var SEMICOLON .)
    WHILE           reduce using rule 42 (expression_stmt -> COUT LGREATER var LGREATER var SEMICOLON .)
    FOR             reduce using rule 42 (expression_stmt -> COUT LGREATER var LGREATER var SEMICOLON .)
    RETURN          reduce using rule 42 (expression_stmt -> COUT LGREATER var LGREATER var SEMICOLON .)
    LPAREN          reduce using rule 42 (expression_stmt -> COUT LGREATER var LGREATER var SEMICOLON .)
    NUMBER          reduce using rule 42 (expression_stmt -> COUT LGREATER var LGREATER var SEMICOLON .)
    ELSE            reduce using rule 42 (expression_stmt -> COUT LGREATER var LGREATER var SEMICOLON .)


state 164

    (41) expression_stmt -> COUT LGREATER var LGREATER ENDL SEMICOLON .

    RBLOCK          reduce using rule 41 (expression_stmt -> COUT LGREATER var LGREATER ENDL SEMICOLON .)
    SEMICOLON       reduce using rule 41 (expression_stmt -> COUT LGREATER var LGREATER ENDL SEMICOLON .)
    COUT            reduce using rule 41 (expression_stmt -> COUT LGREATER var LGREATER ENDL SEMICOLON .)
    CIN             reduce using rule 41 (expression_stmt -> COUT LGREATER var LGREATER ENDL SEMICOLON .)
    ID              reduce using rule 41 (expression_stmt -> COUT LGREATER var LGREATER ENDL SEMICOLON .)
    PLUSPLUS        reduce using rule 41 (expression_stmt -> COUT LGREATER var LGREATER ENDL SEMICOLON .)
    MINUSMINUS      reduce using rule 41 (expression_stmt -> COUT LGREATER var LGREATER ENDL SEMICOLON .)
    LBLOCK          reduce using rule 41 (expression_stmt -> COUT LGREATER var LGREATER ENDL SEMICOLON .)
    IF              reduce using rule 41 (expression_stmt -> COUT LGREATER var LGREATER ENDL SEMICOLON .)
    WHILE           reduce using rule 41 (expression_stmt -> COUT LGREATER var LGREATER ENDL SEMICOLON .)
    FOR             reduce using rule 41 (expression_stmt -> COUT LGREATER var LGREATER ENDL SEMICOLON .)
    RETURN          reduce using rule 41 (expression_stmt -> COUT LGREATER var LGREATER ENDL SEMICOLON .)
    LPAREN          reduce using rule 41 (expression_stmt -> COUT LGREATER var LGREATER ENDL SEMICOLON .)
    NUMBER          reduce using rule 41 (expression_stmt -> COUT LGREATER var LGREATER ENDL SEMICOLON .)
    ELSE            reduce using rule 41 (expression_stmt -> COUT LGREATER var LGREATER ENDL SEMICOLON .)


state 165

    (45) expression_stmt -> CIN RGREATER var RGREATER var SEMICOLON .

    RBLOCK          reduce using rule 45 (expression_stmt -> CIN RGREATER var RGREATER var SEMICOLON .)
    SEMICOLON       reduce using rule 45 (expression_stmt -> CIN RGREATER var RGREATER var SEMICOLON .)
    COUT            reduce using rule 45 (expression_stmt -> CIN RGREATER var RGREATER var SEMICOLON .)
    CIN             reduce using rule 45 (expression_stmt -> CIN RGREATER var RGREATER var SEMICOLON .)
    ID              reduce using rule 45 (expression_stmt -> CIN RGREATER var RGREATER var SEMICOLON .)
    PLUSPLUS        reduce using rule 45 (expression_stmt -> CIN RGREATER var RGREATER var SEMICOLON .)
    MINUSMINUS      reduce using rule 45 (expression_stmt -> CIN RGREATER var RGREATER var SEMICOLON .)
    LBLOCK          reduce using rule 45 (expression_stmt -> CIN RGREATER var RGREATER var SEMICOLON .)
    IF              reduce using rule 45 (expression_stmt -> CIN RGREATER var RGREATER var SEMICOLON .)
    WHILE           reduce using rule 45 (expression_stmt -> CIN RGREATER var RGREATER var SEMICOLON .)
    FOR             reduce using rule 45 (expression_stmt -> CIN RGREATER var RGREATER var SEMICOLON .)
    RETURN          reduce using rule 45 (expression_stmt -> CIN RGREATER var RGREATER var SEMICOLON .)
    LPAREN          reduce using rule 45 (expression_stmt -> CIN RGREATER var RGREATER var SEMICOLON .)
    NUMBER          reduce using rule 45 (expression_stmt -> CIN RGREATER var RGREATER var SEMICOLON .)
    ELSE            reduce using rule 45 (expression_stmt -> CIN RGREATER var RGREATER var SEMICOLON .)


state 166

    (46) expression_stmt -> CIN POINT GET LPAREN RPAREN SEMICOLON .

    RBLOCK          reduce using rule 46 (expression_stmt -> CIN POINT GET LPAREN RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 46 (expression_stmt -> CIN POINT GET LPAREN RPAREN SEMICOLON .)
    COUT            reduce using rule 46 (expression_stmt -> CIN POINT GET LPAREN RPAREN SEMICOLON .)
    CIN             reduce using rule 46 (expression_stmt -> CIN POINT GET LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 46 (expression_stmt -> CIN POINT GET LPAREN RPAREN SEMICOLON .)
    PLUSPLUS        reduce using rule 46 (expression_stmt -> CIN POINT GET LPAREN RPAREN SEMICOLON .)
    MINUSMINUS      reduce using rule 46 (expression_stmt -> CIN POINT GET LPAREN RPAREN SEMICOLON .)
    LBLOCK          reduce using rule 46 (expression_stmt -> CIN POINT GET LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 46 (expression_stmt -> CIN POINT GET LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 46 (expression_stmt -> CIN POINT GET LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 46 (expression_stmt -> CIN POINT GET LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 46 (expression_stmt -> CIN POINT GET LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 46 (expression_stmt -> CIN POINT GET LPAREN RPAREN SEMICOLON .)
    NUMBER          reduce using rule 46 (expression_stmt -> CIN POINT GET LPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 46 (expression_stmt -> CIN POINT GET LPAREN RPAREN SEMICOLON .)


state 167

    (52) selection_stmt -> IF LPAREN expression RPAREN statement ELSE . statement
    (29) statement -> . expression_stmt
    (30) statement -> . compount_stmt
    (31) statement -> . selection_stmt
    (32) statement -> . iteration_stmt
    (33) statement -> . return_stmt
    (34) expression_stmt -> . expression SEMICOLON
    (35) expression_stmt -> . SEMICOLON
    (36) expression_stmt -> . COUT LGREATER QUOTES ID QUOTES SEMICOLON
    (37) expression_stmt -> . COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON
    (38) expression_stmt -> . COUT LGREATER STRING SEMICOLON
    (39) expression_stmt -> . COUT LGREATER STRING LGREATER ENDL SEMICOLON
    (40) expression_stmt -> . COUT LGREATER var SEMICOLON
    (41) expression_stmt -> . COUT LGREATER var LGREATER ENDL SEMICOLON
    (42) expression_stmt -> . COUT LGREATER var LGREATER var SEMICOLON
    (43) expression_stmt -> . COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON
    (44) expression_stmt -> . CIN RGREATER var SEMICOLON
    (45) expression_stmt -> . CIN RGREATER var RGREATER var SEMICOLON
    (46) expression_stmt -> . CIN POINT GET LPAREN RPAREN SEMICOLON
    (47) expression_stmt -> . ID PLUSPLUS
    (48) expression_stmt -> . PLUSPLUS ID
    (49) expression_stmt -> . ID MINUSMINUS
    (50) expression_stmt -> . MINUSMINUS ID
    (24) compount_stmt -> . LBLOCK local_declarations statement_list RBLOCK
    (51) selection_stmt -> . IF LPAREN expression RPAREN statement
    (52) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (53) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (54) iteration_stmt -> .
    (55) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (56) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (57) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (58) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (59) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement
    (60) return_stmt -> . RETURN SEMICOLON
    (61) return_stmt -> . RETURN expression SEMICOLON
    (62) expression -> . var EQUAL expression
    (63) expression -> . simple_expression
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET
    (66) simple_expression -> . additive_expression relop additive_expression
    (67) simple_expression -> . additive_expression
    (75) additive_expression -> . additive_expression addop term
    (76) additive_expression -> . term
    (79) term -> . term mulop factor
    (80) term -> . factor
    (83) factor -> . LPAREN expression RPAREN
    (84) factor -> . var
    (85) factor -> . call
    (86) factor -> . NUMBER
    (87) call -> . ID LPAREN args RPAREN

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for COUT resolved as shift
  ! shift/reduce conflict for CIN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
    SEMICOLON       shift and go to state 105
    COUT            shift and go to state 106
    CIN             shift and go to state 108
    ID              shift and go to state 107
    PLUSPLUS        shift and go to state 109
    MINUSMINUS      shift and go to state 110
    LBLOCK          shift and go to state 58
    IF              shift and go to state 111
    WHILE           shift and go to state 112
    ELSE            reduce using rule 54 (iteration_stmt -> .)
    RBLOCK          reduce using rule 54 (iteration_stmt -> .)
    FOR             shift and go to state 113
    RETURN          shift and go to state 114
    LPAREN          shift and go to state 52
    NUMBER          shift and go to state 54

  ! SEMICOLON       [ reduce using rule 54 (iteration_stmt -> .) ]
  ! COUT            [ reduce using rule 54 (iteration_stmt -> .) ]
  ! CIN             [ reduce using rule 54 (iteration_stmt -> .) ]
  ! ID              [ reduce using rule 54 (iteration_stmt -> .) ]
  ! PLUSPLUS        [ reduce using rule 54 (iteration_stmt -> .) ]
  ! MINUSMINUS      [ reduce using rule 54 (iteration_stmt -> .) ]
  ! LBLOCK          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! IF              [ reduce using rule 54 (iteration_stmt -> .) ]
  ! WHILE           [ reduce using rule 54 (iteration_stmt -> .) ]
  ! FOR             [ reduce using rule 54 (iteration_stmt -> .) ]
  ! RETURN          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! LPAREN          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! NUMBER          [ reduce using rule 54 (iteration_stmt -> .) ]

    expression                     shift and go to state 104
    statement                      shift and go to state 171
    expression_stmt                shift and go to state 99
    compount_stmt                  shift and go to state 100
    selection_stmt                 shift and go to state 101
    iteration_stmt                 shift and go to state 102
    return_stmt                    shift and go to state 103
    var                            shift and go to state 47
    simple_expression              shift and go to state 48
    additive_expression            shift and go to state 49
    term                           shift and go to state 50
    factor                         shift and go to state 51
    call                           shift and go to state 53

state 168

    (55) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression . SEMICOLON expression RPAREN statement
    (56) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression . SEMICOLON var PLUSPLUS RPAREN statement
    (57) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression . SEMICOLON PLUSPLUS var RPAREN statement
    (58) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression . SEMICOLON var MINUSMINUS RPAREN statement
    (59) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression . SEMICOLON MINUSMINUS var RPAREN statement

    SEMICOLON       shift and go to state 172


state 169

    (37) expression_stmt -> COUT LGREATER QUOTES ID QUOTES LGREATER ENDL . SEMICOLON

    SEMICOLON       shift and go to state 173


state 170

    (43) expression_stmt -> COUT LGREATER var LGREATER var LGREATER ENDL . SEMICOLON

    SEMICOLON       shift and go to state 174


state 171

    (52) selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .

    RBLOCK          reduce using rule 52 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    SEMICOLON       reduce using rule 52 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    COUT            reduce using rule 52 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    CIN             reduce using rule 52 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    ID              reduce using rule 52 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    PLUSPLUS        reduce using rule 52 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    MINUSMINUS      reduce using rule 52 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBLOCK          reduce using rule 52 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 52 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 52 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 52 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    RETURN          reduce using rule 52 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    LPAREN          reduce using rule 52 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    NUMBER          reduce using rule 52 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 52 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)


state 172

    (55) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON . expression RPAREN statement
    (56) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON . var PLUSPLUS RPAREN statement
    (57) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON . PLUSPLUS var RPAREN statement
    (58) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON . var MINUSMINUS RPAREN statement
    (59) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON . MINUSMINUS var RPAREN statement
    (62) expression -> . var EQUAL expression
    (63) expression -> . simple_expression
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET
    (66) simple_expression -> . additive_expression relop additive_expression
    (67) simple_expression -> . additive_expression
    (75) additive_expression -> . additive_expression addop term
    (76) additive_expression -> . term
    (79) term -> . term mulop factor
    (80) term -> . factor
    (83) factor -> . LPAREN expression RPAREN
    (84) factor -> . var
    (85) factor -> . call
    (86) factor -> . NUMBER
    (87) call -> . ID LPAREN args RPAREN

    PLUSPLUS        shift and go to state 177
    MINUSMINUS      shift and go to state 178
    ID              shift and go to state 45
    LPAREN          shift and go to state 52
    NUMBER          shift and go to state 54

    expression                     shift and go to state 175
    var                            shift and go to state 176
    simple_expression              shift and go to state 48
    additive_expression            shift and go to state 49
    term                           shift and go to state 50
    factor                         shift and go to state 51
    call                           shift and go to state 53

state 173

    (37) expression_stmt -> COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON .

    RBLOCK          reduce using rule 37 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON .)
    SEMICOLON       reduce using rule 37 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON .)
    COUT            reduce using rule 37 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON .)
    CIN             reduce using rule 37 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON .)
    ID              reduce using rule 37 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON .)
    PLUSPLUS        reduce using rule 37 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON .)
    MINUSMINUS      reduce using rule 37 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON .)
    LBLOCK          reduce using rule 37 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON .)
    IF              reduce using rule 37 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON .)
    WHILE           reduce using rule 37 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON .)
    FOR             reduce using rule 37 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON .)
    RETURN          reduce using rule 37 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON .)
    LPAREN          reduce using rule 37 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON .)
    NUMBER          reduce using rule 37 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON .)
    ELSE            reduce using rule 37 (expression_stmt -> COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON .)


state 174

    (43) expression_stmt -> COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON .

    RBLOCK          reduce using rule 43 (expression_stmt -> COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON .)
    SEMICOLON       reduce using rule 43 (expression_stmt -> COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON .)
    COUT            reduce using rule 43 (expression_stmt -> COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON .)
    CIN             reduce using rule 43 (expression_stmt -> COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON .)
    ID              reduce using rule 43 (expression_stmt -> COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON .)
    PLUSPLUS        reduce using rule 43 (expression_stmt -> COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON .)
    MINUSMINUS      reduce using rule 43 (expression_stmt -> COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON .)
    LBLOCK          reduce using rule 43 (expression_stmt -> COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON .)
    IF              reduce using rule 43 (expression_stmt -> COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON .)
    WHILE           reduce using rule 43 (expression_stmt -> COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON .)
    FOR             reduce using rule 43 (expression_stmt -> COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON .)
    RETURN          reduce using rule 43 (expression_stmt -> COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON .)
    LPAREN          reduce using rule 43 (expression_stmt -> COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON .)
    NUMBER          reduce using rule 43 (expression_stmt -> COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON .)
    ELSE            reduce using rule 43 (expression_stmt -> COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON .)


state 175

    (55) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression . RPAREN statement

    RPAREN          shift and go to state 179


state 176

    (56) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var . PLUSPLUS RPAREN statement
    (58) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var . MINUSMINUS RPAREN statement
    (62) expression -> var . EQUAL expression
    (84) factor -> var .

    PLUSPLUS        shift and go to state 180
    MINUSMINUS      shift and go to state 181
    EQUAL           shift and go to state 62
    TIMES           reduce using rule 84 (factor -> var .)
    DIVIDE          reduce using rule 84 (factor -> var .)
    LESS            reduce using rule 84 (factor -> var .)
    LESSEQUAL       reduce using rule 84 (factor -> var .)
    GREATER         reduce using rule 84 (factor -> var .)
    GREATEREQUAL    reduce using rule 84 (factor -> var .)
    DEQUAL          reduce using rule 84 (factor -> var .)
    DISTINT         reduce using rule 84 (factor -> var .)
    QUOTES          reduce using rule 84 (factor -> var .)
    PLUS            reduce using rule 84 (factor -> var .)
    MINUS           reduce using rule 84 (factor -> var .)
    RPAREN          reduce using rule 84 (factor -> var .)


state 177

    (57) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS . var RPAREN statement
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 26

    var                            shift and go to state 182

state 178

    (59) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS . var RPAREN statement
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 26

    var                            shift and go to state 183

state 179

    (55) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN . statement
    (29) statement -> . expression_stmt
    (30) statement -> . compount_stmt
    (31) statement -> . selection_stmt
    (32) statement -> . iteration_stmt
    (33) statement -> . return_stmt
    (34) expression_stmt -> . expression SEMICOLON
    (35) expression_stmt -> . SEMICOLON
    (36) expression_stmt -> . COUT LGREATER QUOTES ID QUOTES SEMICOLON
    (37) expression_stmt -> . COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON
    (38) expression_stmt -> . COUT LGREATER STRING SEMICOLON
    (39) expression_stmt -> . COUT LGREATER STRING LGREATER ENDL SEMICOLON
    (40) expression_stmt -> . COUT LGREATER var SEMICOLON
    (41) expression_stmt -> . COUT LGREATER var LGREATER ENDL SEMICOLON
    (42) expression_stmt -> . COUT LGREATER var LGREATER var SEMICOLON
    (43) expression_stmt -> . COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON
    (44) expression_stmt -> . CIN RGREATER var SEMICOLON
    (45) expression_stmt -> . CIN RGREATER var RGREATER var SEMICOLON
    (46) expression_stmt -> . CIN POINT GET LPAREN RPAREN SEMICOLON
    (47) expression_stmt -> . ID PLUSPLUS
    (48) expression_stmt -> . PLUSPLUS ID
    (49) expression_stmt -> . ID MINUSMINUS
    (50) expression_stmt -> . MINUSMINUS ID
    (24) compount_stmt -> . LBLOCK local_declarations statement_list RBLOCK
    (51) selection_stmt -> . IF LPAREN expression RPAREN statement
    (52) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (53) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (54) iteration_stmt -> .
    (55) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (56) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (57) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (58) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (59) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement
    (60) return_stmt -> . RETURN SEMICOLON
    (61) return_stmt -> . RETURN expression SEMICOLON
    (62) expression -> . var EQUAL expression
    (63) expression -> . simple_expression
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET
    (66) simple_expression -> . additive_expression relop additive_expression
    (67) simple_expression -> . additive_expression
    (75) additive_expression -> . additive_expression addop term
    (76) additive_expression -> . term
    (79) term -> . term mulop factor
    (80) term -> . factor
    (83) factor -> . LPAREN expression RPAREN
    (84) factor -> . var
    (85) factor -> . call
    (86) factor -> . NUMBER
    (87) call -> . ID LPAREN args RPAREN

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for COUT resolved as shift
  ! shift/reduce conflict for CIN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
    SEMICOLON       shift and go to state 105
    COUT            shift and go to state 106
    CIN             shift and go to state 108
    ID              shift and go to state 107
    PLUSPLUS        shift and go to state 109
    MINUSMINUS      shift and go to state 110
    LBLOCK          shift and go to state 58
    IF              shift and go to state 111
    WHILE           shift and go to state 112
    ELSE            reduce using rule 54 (iteration_stmt -> .)
    RBLOCK          reduce using rule 54 (iteration_stmt -> .)
    FOR             shift and go to state 113
    RETURN          shift and go to state 114
    LPAREN          shift and go to state 52
    NUMBER          shift and go to state 54

  ! SEMICOLON       [ reduce using rule 54 (iteration_stmt -> .) ]
  ! COUT            [ reduce using rule 54 (iteration_stmt -> .) ]
  ! CIN             [ reduce using rule 54 (iteration_stmt -> .) ]
  ! ID              [ reduce using rule 54 (iteration_stmt -> .) ]
  ! PLUSPLUS        [ reduce using rule 54 (iteration_stmt -> .) ]
  ! MINUSMINUS      [ reduce using rule 54 (iteration_stmt -> .) ]
  ! LBLOCK          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! IF              [ reduce using rule 54 (iteration_stmt -> .) ]
  ! WHILE           [ reduce using rule 54 (iteration_stmt -> .) ]
  ! FOR             [ reduce using rule 54 (iteration_stmt -> .) ]
  ! RETURN          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! LPAREN          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! NUMBER          [ reduce using rule 54 (iteration_stmt -> .) ]

    expression                     shift and go to state 104
    statement                      shift and go to state 184
    expression_stmt                shift and go to state 99
    compount_stmt                  shift and go to state 100
    selection_stmt                 shift and go to state 101
    iteration_stmt                 shift and go to state 102
    return_stmt                    shift and go to state 103
    var                            shift and go to state 47
    simple_expression              shift and go to state 48
    additive_expression            shift and go to state 49
    term                           shift and go to state 50
    factor                         shift and go to state 51
    call                           shift and go to state 53

state 180

    (56) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS . RPAREN statement

    RPAREN          shift and go to state 185


state 181

    (58) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS . RPAREN statement

    RPAREN          shift and go to state 186


state 182

    (57) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var . RPAREN statement

    RPAREN          shift and go to state 187


state 183

    (59) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var . RPAREN statement

    RPAREN          shift and go to state 188


state 184

    (55) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement .

    RBLOCK          reduce using rule 55 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    SEMICOLON       reduce using rule 55 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    COUT            reduce using rule 55 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    CIN             reduce using rule 55 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    ID              reduce using rule 55 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    PLUSPLUS        reduce using rule 55 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    MINUSMINUS      reduce using rule 55 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    LBLOCK          reduce using rule 55 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    IF              reduce using rule 55 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    WHILE           reduce using rule 55 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    FOR             reduce using rule 55 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    RETURN          reduce using rule 55 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    LPAREN          reduce using rule 55 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    NUMBER          reduce using rule 55 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    ELSE            reduce using rule 55 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement .)


state 185

    (56) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN . statement
    (29) statement -> . expression_stmt
    (30) statement -> . compount_stmt
    (31) statement -> . selection_stmt
    (32) statement -> . iteration_stmt
    (33) statement -> . return_stmt
    (34) expression_stmt -> . expression SEMICOLON
    (35) expression_stmt -> . SEMICOLON
    (36) expression_stmt -> . COUT LGREATER QUOTES ID QUOTES SEMICOLON
    (37) expression_stmt -> . COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON
    (38) expression_stmt -> . COUT LGREATER STRING SEMICOLON
    (39) expression_stmt -> . COUT LGREATER STRING LGREATER ENDL SEMICOLON
    (40) expression_stmt -> . COUT LGREATER var SEMICOLON
    (41) expression_stmt -> . COUT LGREATER var LGREATER ENDL SEMICOLON
    (42) expression_stmt -> . COUT LGREATER var LGREATER var SEMICOLON
    (43) expression_stmt -> . COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON
    (44) expression_stmt -> . CIN RGREATER var SEMICOLON
    (45) expression_stmt -> . CIN RGREATER var RGREATER var SEMICOLON
    (46) expression_stmt -> . CIN POINT GET LPAREN RPAREN SEMICOLON
    (47) expression_stmt -> . ID PLUSPLUS
    (48) expression_stmt -> . PLUSPLUS ID
    (49) expression_stmt -> . ID MINUSMINUS
    (50) expression_stmt -> . MINUSMINUS ID
    (24) compount_stmt -> . LBLOCK local_declarations statement_list RBLOCK
    (51) selection_stmt -> . IF LPAREN expression RPAREN statement
    (52) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (53) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (54) iteration_stmt -> .
    (55) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (56) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (57) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (58) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (59) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement
    (60) return_stmt -> . RETURN SEMICOLON
    (61) return_stmt -> . RETURN expression SEMICOLON
    (62) expression -> . var EQUAL expression
    (63) expression -> . simple_expression
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET
    (66) simple_expression -> . additive_expression relop additive_expression
    (67) simple_expression -> . additive_expression
    (75) additive_expression -> . additive_expression addop term
    (76) additive_expression -> . term
    (79) term -> . term mulop factor
    (80) term -> . factor
    (83) factor -> . LPAREN expression RPAREN
    (84) factor -> . var
    (85) factor -> . call
    (86) factor -> . NUMBER
    (87) call -> . ID LPAREN args RPAREN

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for COUT resolved as shift
  ! shift/reduce conflict for CIN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
    SEMICOLON       shift and go to state 105
    COUT            shift and go to state 106
    CIN             shift and go to state 108
    ID              shift and go to state 107
    PLUSPLUS        shift and go to state 109
    MINUSMINUS      shift and go to state 110
    LBLOCK          shift and go to state 58
    IF              shift and go to state 111
    WHILE           shift and go to state 112
    ELSE            reduce using rule 54 (iteration_stmt -> .)
    RBLOCK          reduce using rule 54 (iteration_stmt -> .)
    FOR             shift and go to state 113
    RETURN          shift and go to state 114
    LPAREN          shift and go to state 52
    NUMBER          shift and go to state 54

  ! SEMICOLON       [ reduce using rule 54 (iteration_stmt -> .) ]
  ! COUT            [ reduce using rule 54 (iteration_stmt -> .) ]
  ! CIN             [ reduce using rule 54 (iteration_stmt -> .) ]
  ! ID              [ reduce using rule 54 (iteration_stmt -> .) ]
  ! PLUSPLUS        [ reduce using rule 54 (iteration_stmt -> .) ]
  ! MINUSMINUS      [ reduce using rule 54 (iteration_stmt -> .) ]
  ! LBLOCK          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! IF              [ reduce using rule 54 (iteration_stmt -> .) ]
  ! WHILE           [ reduce using rule 54 (iteration_stmt -> .) ]
  ! FOR             [ reduce using rule 54 (iteration_stmt -> .) ]
  ! RETURN          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! LPAREN          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! NUMBER          [ reduce using rule 54 (iteration_stmt -> .) ]

    expression                     shift and go to state 104
    var                            shift and go to state 47
    statement                      shift and go to state 189
    expression_stmt                shift and go to state 99
    compount_stmt                  shift and go to state 100
    selection_stmt                 shift and go to state 101
    iteration_stmt                 shift and go to state 102
    return_stmt                    shift and go to state 103
    simple_expression              shift and go to state 48
    additive_expression            shift and go to state 49
    term                           shift and go to state 50
    factor                         shift and go to state 51
    call                           shift and go to state 53

state 186

    (58) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN . statement
    (29) statement -> . expression_stmt
    (30) statement -> . compount_stmt
    (31) statement -> . selection_stmt
    (32) statement -> . iteration_stmt
    (33) statement -> . return_stmt
    (34) expression_stmt -> . expression SEMICOLON
    (35) expression_stmt -> . SEMICOLON
    (36) expression_stmt -> . COUT LGREATER QUOTES ID QUOTES SEMICOLON
    (37) expression_stmt -> . COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON
    (38) expression_stmt -> . COUT LGREATER STRING SEMICOLON
    (39) expression_stmt -> . COUT LGREATER STRING LGREATER ENDL SEMICOLON
    (40) expression_stmt -> . COUT LGREATER var SEMICOLON
    (41) expression_stmt -> . COUT LGREATER var LGREATER ENDL SEMICOLON
    (42) expression_stmt -> . COUT LGREATER var LGREATER var SEMICOLON
    (43) expression_stmt -> . COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON
    (44) expression_stmt -> . CIN RGREATER var SEMICOLON
    (45) expression_stmt -> . CIN RGREATER var RGREATER var SEMICOLON
    (46) expression_stmt -> . CIN POINT GET LPAREN RPAREN SEMICOLON
    (47) expression_stmt -> . ID PLUSPLUS
    (48) expression_stmt -> . PLUSPLUS ID
    (49) expression_stmt -> . ID MINUSMINUS
    (50) expression_stmt -> . MINUSMINUS ID
    (24) compount_stmt -> . LBLOCK local_declarations statement_list RBLOCK
    (51) selection_stmt -> . IF LPAREN expression RPAREN statement
    (52) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (53) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (54) iteration_stmt -> .
    (55) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (56) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (57) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (58) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (59) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement
    (60) return_stmt -> . RETURN SEMICOLON
    (61) return_stmt -> . RETURN expression SEMICOLON
    (62) expression -> . var EQUAL expression
    (63) expression -> . simple_expression
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET
    (66) simple_expression -> . additive_expression relop additive_expression
    (67) simple_expression -> . additive_expression
    (75) additive_expression -> . additive_expression addop term
    (76) additive_expression -> . term
    (79) term -> . term mulop factor
    (80) term -> . factor
    (83) factor -> . LPAREN expression RPAREN
    (84) factor -> . var
    (85) factor -> . call
    (86) factor -> . NUMBER
    (87) call -> . ID LPAREN args RPAREN

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for COUT resolved as shift
  ! shift/reduce conflict for CIN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
    SEMICOLON       shift and go to state 105
    COUT            shift and go to state 106
    CIN             shift and go to state 108
    ID              shift and go to state 107
    PLUSPLUS        shift and go to state 109
    MINUSMINUS      shift and go to state 110
    LBLOCK          shift and go to state 58
    IF              shift and go to state 111
    WHILE           shift and go to state 112
    ELSE            reduce using rule 54 (iteration_stmt -> .)
    RBLOCK          reduce using rule 54 (iteration_stmt -> .)
    FOR             shift and go to state 113
    RETURN          shift and go to state 114
    LPAREN          shift and go to state 52
    NUMBER          shift and go to state 54

  ! SEMICOLON       [ reduce using rule 54 (iteration_stmt -> .) ]
  ! COUT            [ reduce using rule 54 (iteration_stmt -> .) ]
  ! CIN             [ reduce using rule 54 (iteration_stmt -> .) ]
  ! ID              [ reduce using rule 54 (iteration_stmt -> .) ]
  ! PLUSPLUS        [ reduce using rule 54 (iteration_stmt -> .) ]
  ! MINUSMINUS      [ reduce using rule 54 (iteration_stmt -> .) ]
  ! LBLOCK          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! IF              [ reduce using rule 54 (iteration_stmt -> .) ]
  ! WHILE           [ reduce using rule 54 (iteration_stmt -> .) ]
  ! FOR             [ reduce using rule 54 (iteration_stmt -> .) ]
  ! RETURN          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! LPAREN          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! NUMBER          [ reduce using rule 54 (iteration_stmt -> .) ]

    expression                     shift and go to state 104
    var                            shift and go to state 47
    statement                      shift and go to state 190
    expression_stmt                shift and go to state 99
    compount_stmt                  shift and go to state 100
    selection_stmt                 shift and go to state 101
    iteration_stmt                 shift and go to state 102
    return_stmt                    shift and go to state 103
    simple_expression              shift and go to state 48
    additive_expression            shift and go to state 49
    term                           shift and go to state 50
    factor                         shift and go to state 51
    call                           shift and go to state 53

state 187

    (57) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN . statement
    (29) statement -> . expression_stmt
    (30) statement -> . compount_stmt
    (31) statement -> . selection_stmt
    (32) statement -> . iteration_stmt
    (33) statement -> . return_stmt
    (34) expression_stmt -> . expression SEMICOLON
    (35) expression_stmt -> . SEMICOLON
    (36) expression_stmt -> . COUT LGREATER QUOTES ID QUOTES SEMICOLON
    (37) expression_stmt -> . COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON
    (38) expression_stmt -> . COUT LGREATER STRING SEMICOLON
    (39) expression_stmt -> . COUT LGREATER STRING LGREATER ENDL SEMICOLON
    (40) expression_stmt -> . COUT LGREATER var SEMICOLON
    (41) expression_stmt -> . COUT LGREATER var LGREATER ENDL SEMICOLON
    (42) expression_stmt -> . COUT LGREATER var LGREATER var SEMICOLON
    (43) expression_stmt -> . COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON
    (44) expression_stmt -> . CIN RGREATER var SEMICOLON
    (45) expression_stmt -> . CIN RGREATER var RGREATER var SEMICOLON
    (46) expression_stmt -> . CIN POINT GET LPAREN RPAREN SEMICOLON
    (47) expression_stmt -> . ID PLUSPLUS
    (48) expression_stmt -> . PLUSPLUS ID
    (49) expression_stmt -> . ID MINUSMINUS
    (50) expression_stmt -> . MINUSMINUS ID
    (24) compount_stmt -> . LBLOCK local_declarations statement_list RBLOCK
    (51) selection_stmt -> . IF LPAREN expression RPAREN statement
    (52) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (53) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (54) iteration_stmt -> .
    (55) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (56) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (57) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (58) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (59) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement
    (60) return_stmt -> . RETURN SEMICOLON
    (61) return_stmt -> . RETURN expression SEMICOLON
    (62) expression -> . var EQUAL expression
    (63) expression -> . simple_expression
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET
    (66) simple_expression -> . additive_expression relop additive_expression
    (67) simple_expression -> . additive_expression
    (75) additive_expression -> . additive_expression addop term
    (76) additive_expression -> . term
    (79) term -> . term mulop factor
    (80) term -> . factor
    (83) factor -> . LPAREN expression RPAREN
    (84) factor -> . var
    (85) factor -> . call
    (86) factor -> . NUMBER
    (87) call -> . ID LPAREN args RPAREN

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for COUT resolved as shift
  ! shift/reduce conflict for CIN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
    SEMICOLON       shift and go to state 105
    COUT            shift and go to state 106
    CIN             shift and go to state 108
    ID              shift and go to state 107
    PLUSPLUS        shift and go to state 109
    MINUSMINUS      shift and go to state 110
    LBLOCK          shift and go to state 58
    IF              shift and go to state 111
    WHILE           shift and go to state 112
    ELSE            reduce using rule 54 (iteration_stmt -> .)
    RBLOCK          reduce using rule 54 (iteration_stmt -> .)
    FOR             shift and go to state 113
    RETURN          shift and go to state 114
    LPAREN          shift and go to state 52
    NUMBER          shift and go to state 54

  ! SEMICOLON       [ reduce using rule 54 (iteration_stmt -> .) ]
  ! COUT            [ reduce using rule 54 (iteration_stmt -> .) ]
  ! CIN             [ reduce using rule 54 (iteration_stmt -> .) ]
  ! ID              [ reduce using rule 54 (iteration_stmt -> .) ]
  ! PLUSPLUS        [ reduce using rule 54 (iteration_stmt -> .) ]
  ! MINUSMINUS      [ reduce using rule 54 (iteration_stmt -> .) ]
  ! LBLOCK          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! IF              [ reduce using rule 54 (iteration_stmt -> .) ]
  ! WHILE           [ reduce using rule 54 (iteration_stmt -> .) ]
  ! FOR             [ reduce using rule 54 (iteration_stmt -> .) ]
  ! RETURN          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! LPAREN          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! NUMBER          [ reduce using rule 54 (iteration_stmt -> .) ]

    expression                     shift and go to state 104
    var                            shift and go to state 47
    statement                      shift and go to state 191
    expression_stmt                shift and go to state 99
    compount_stmt                  shift and go to state 100
    selection_stmt                 shift and go to state 101
    iteration_stmt                 shift and go to state 102
    return_stmt                    shift and go to state 103
    simple_expression              shift and go to state 48
    additive_expression            shift and go to state 49
    term                           shift and go to state 50
    factor                         shift and go to state 51
    call                           shift and go to state 53

state 188

    (59) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN . statement
    (29) statement -> . expression_stmt
    (30) statement -> . compount_stmt
    (31) statement -> . selection_stmt
    (32) statement -> . iteration_stmt
    (33) statement -> . return_stmt
    (34) expression_stmt -> . expression SEMICOLON
    (35) expression_stmt -> . SEMICOLON
    (36) expression_stmt -> . COUT LGREATER QUOTES ID QUOTES SEMICOLON
    (37) expression_stmt -> . COUT LGREATER QUOTES ID QUOTES LGREATER ENDL SEMICOLON
    (38) expression_stmt -> . COUT LGREATER STRING SEMICOLON
    (39) expression_stmt -> . COUT LGREATER STRING LGREATER ENDL SEMICOLON
    (40) expression_stmt -> . COUT LGREATER var SEMICOLON
    (41) expression_stmt -> . COUT LGREATER var LGREATER ENDL SEMICOLON
    (42) expression_stmt -> . COUT LGREATER var LGREATER var SEMICOLON
    (43) expression_stmt -> . COUT LGREATER var LGREATER var LGREATER ENDL SEMICOLON
    (44) expression_stmt -> . CIN RGREATER var SEMICOLON
    (45) expression_stmt -> . CIN RGREATER var RGREATER var SEMICOLON
    (46) expression_stmt -> . CIN POINT GET LPAREN RPAREN SEMICOLON
    (47) expression_stmt -> . ID PLUSPLUS
    (48) expression_stmt -> . PLUSPLUS ID
    (49) expression_stmt -> . ID MINUSMINUS
    (50) expression_stmt -> . MINUSMINUS ID
    (24) compount_stmt -> . LBLOCK local_declarations statement_list RBLOCK
    (51) selection_stmt -> . IF LPAREN expression RPAREN statement
    (52) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (53) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (54) iteration_stmt -> .
    (55) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (56) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement
    (57) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement
    (58) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement
    (59) iteration_stmt -> . FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement
    (60) return_stmt -> . RETURN SEMICOLON
    (61) return_stmt -> . RETURN expression SEMICOLON
    (62) expression -> . var EQUAL expression
    (63) expression -> . simple_expression
    (64) var -> . ID
    (65) var -> . ID LBRACKET expression RBRACKET
    (66) simple_expression -> . additive_expression relop additive_expression
    (67) simple_expression -> . additive_expression
    (75) additive_expression -> . additive_expression addop term
    (76) additive_expression -> . term
    (79) term -> . term mulop factor
    (80) term -> . factor
    (83) factor -> . LPAREN expression RPAREN
    (84) factor -> . var
    (85) factor -> . call
    (86) factor -> . NUMBER
    (87) call -> . ID LPAREN args RPAREN

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for COUT resolved as shift
  ! shift/reduce conflict for CIN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
    SEMICOLON       shift and go to state 105
    COUT            shift and go to state 106
    CIN             shift and go to state 108
    ID              shift and go to state 107
    PLUSPLUS        shift and go to state 109
    MINUSMINUS      shift and go to state 110
    LBLOCK          shift and go to state 58
    IF              shift and go to state 111
    WHILE           shift and go to state 112
    ELSE            reduce using rule 54 (iteration_stmt -> .)
    RBLOCK          reduce using rule 54 (iteration_stmt -> .)
    FOR             shift and go to state 113
    RETURN          shift and go to state 114
    LPAREN          shift and go to state 52
    NUMBER          shift and go to state 54

  ! SEMICOLON       [ reduce using rule 54 (iteration_stmt -> .) ]
  ! COUT            [ reduce using rule 54 (iteration_stmt -> .) ]
  ! CIN             [ reduce using rule 54 (iteration_stmt -> .) ]
  ! ID              [ reduce using rule 54 (iteration_stmt -> .) ]
  ! PLUSPLUS        [ reduce using rule 54 (iteration_stmt -> .) ]
  ! MINUSMINUS      [ reduce using rule 54 (iteration_stmt -> .) ]
  ! LBLOCK          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! IF              [ reduce using rule 54 (iteration_stmt -> .) ]
  ! WHILE           [ reduce using rule 54 (iteration_stmt -> .) ]
  ! FOR             [ reduce using rule 54 (iteration_stmt -> .) ]
  ! RETURN          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! LPAREN          [ reduce using rule 54 (iteration_stmt -> .) ]
  ! NUMBER          [ reduce using rule 54 (iteration_stmt -> .) ]

    expression                     shift and go to state 104
    var                            shift and go to state 47
    statement                      shift and go to state 192
    expression_stmt                shift and go to state 99
    compount_stmt                  shift and go to state 100
    selection_stmt                 shift and go to state 101
    iteration_stmt                 shift and go to state 102
    return_stmt                    shift and go to state 103
    simple_expression              shift and go to state 48
    additive_expression            shift and go to state 49
    term                           shift and go to state 50
    factor                         shift and go to state 51
    call                           shift and go to state 53

state 189

    (56) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .

    RBLOCK          reduce using rule 56 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    SEMICOLON       reduce using rule 56 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    COUT            reduce using rule 56 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    CIN             reduce using rule 56 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    ID              reduce using rule 56 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    PLUSPLUS        reduce using rule 56 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    MINUSMINUS      reduce using rule 56 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    LBLOCK          reduce using rule 56 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    IF              reduce using rule 56 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    WHILE           reduce using rule 56 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    FOR             reduce using rule 56 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    RETURN          reduce using rule 56 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    LPAREN          reduce using rule 56 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    NUMBER          reduce using rule 56 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)
    ELSE            reduce using rule 56 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement .)


state 190

    (58) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .

    RBLOCK          reduce using rule 58 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    SEMICOLON       reduce using rule 58 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    COUT            reduce using rule 58 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    CIN             reduce using rule 58 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    ID              reduce using rule 58 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    PLUSPLUS        reduce using rule 58 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    MINUSMINUS      reduce using rule 58 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    LBLOCK          reduce using rule 58 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    IF              reduce using rule 58 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    WHILE           reduce using rule 58 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    FOR             reduce using rule 58 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    RETURN          reduce using rule 58 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    LPAREN          reduce using rule 58 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    NUMBER          reduce using rule 58 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)
    ELSE            reduce using rule 58 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement .)


state 191

    (57) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .

    RBLOCK          reduce using rule 57 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    SEMICOLON       reduce using rule 57 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    COUT            reduce using rule 57 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    CIN             reduce using rule 57 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    ID              reduce using rule 57 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    PLUSPLUS        reduce using rule 57 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    MINUSMINUS      reduce using rule 57 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    LBLOCK          reduce using rule 57 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    IF              reduce using rule 57 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    WHILE           reduce using rule 57 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    FOR             reduce using rule 57 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    RETURN          reduce using rule 57 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    LPAREN          reduce using rule 57 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    NUMBER          reduce using rule 57 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)
    ELSE            reduce using rule 57 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement .)


state 192

    (59) iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .

    RBLOCK          reduce using rule 59 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    SEMICOLON       reduce using rule 59 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    COUT            reduce using rule 59 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    CIN             reduce using rule 59 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    ID              reduce using rule 59 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    PLUSPLUS        reduce using rule 59 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    MINUSMINUS      reduce using rule 59 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    LBLOCK          reduce using rule 59 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    IF              reduce using rule 59 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    WHILE           reduce using rule 59 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    FOR             reduce using rule 59 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    RETURN          reduce using rule 59 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    LPAREN          reduce using rule 59 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    NUMBER          reduce using rule 59 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)
    ELSE            reduce using rule 59 (iteration_stmt -> FOR LPAREN type_specifier expression SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RBLOCK in state 91 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 91 resolved as shift
WARNING: shift/reduce conflict for COUT in state 91 resolved as shift
WARNING: shift/reduce conflict for CIN in state 91 resolved as shift
WARNING: shift/reduce conflict for ID in state 91 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 91 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 91 resolved as shift
WARNING: shift/reduce conflict for IF in state 91 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 91 resolved as shift
WARNING: shift/reduce conflict for FOR in state 91 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 91 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 91 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 91 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 147 resolved as shift
WARNING: shift/reduce conflict for COUT in state 147 resolved as shift
WARNING: shift/reduce conflict for CIN in state 147 resolved as shift
WARNING: shift/reduce conflict for ID in state 147 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 147 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 147 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 147 resolved as shift
WARNING: shift/reduce conflict for IF in state 147 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 147 resolved as shift
WARNING: shift/reduce conflict for FOR in state 147 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 147 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 147 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 147 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 148 resolved as shift
WARNING: shift/reduce conflict for COUT in state 148 resolved as shift
WARNING: shift/reduce conflict for CIN in state 148 resolved as shift
WARNING: shift/reduce conflict for ID in state 148 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 148 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 148 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 148 resolved as shift
WARNING: shift/reduce conflict for IF in state 148 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 148 resolved as shift
WARNING: shift/reduce conflict for FOR in state 148 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 148 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 148 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 148 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 156 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 167 resolved as shift
WARNING: shift/reduce conflict for COUT in state 167 resolved as shift
WARNING: shift/reduce conflict for CIN in state 167 resolved as shift
WARNING: shift/reduce conflict for ID in state 167 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 167 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 167 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 167 resolved as shift
WARNING: shift/reduce conflict for IF in state 167 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 167 resolved as shift
WARNING: shift/reduce conflict for FOR in state 167 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 167 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 167 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 167 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 179 resolved as shift
WARNING: shift/reduce conflict for COUT in state 179 resolved as shift
WARNING: shift/reduce conflict for CIN in state 179 resolved as shift
WARNING: shift/reduce conflict for ID in state 179 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 179 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 179 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 179 resolved as shift
WARNING: shift/reduce conflict for IF in state 179 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 179 resolved as shift
WARNING: shift/reduce conflict for FOR in state 179 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 179 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 179 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 179 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 185 resolved as shift
WARNING: shift/reduce conflict for COUT in state 185 resolved as shift
WARNING: shift/reduce conflict for CIN in state 185 resolved as shift
WARNING: shift/reduce conflict for ID in state 185 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 185 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 185 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 185 resolved as shift
WARNING: shift/reduce conflict for IF in state 185 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 185 resolved as shift
WARNING: shift/reduce conflict for FOR in state 185 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 185 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 185 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 185 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 186 resolved as shift
WARNING: shift/reduce conflict for COUT in state 186 resolved as shift
WARNING: shift/reduce conflict for CIN in state 186 resolved as shift
WARNING: shift/reduce conflict for ID in state 186 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 186 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 186 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 186 resolved as shift
WARNING: shift/reduce conflict for IF in state 186 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 186 resolved as shift
WARNING: shift/reduce conflict for FOR in state 186 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 186 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 186 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 186 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 187 resolved as shift
WARNING: shift/reduce conflict for COUT in state 187 resolved as shift
WARNING: shift/reduce conflict for CIN in state 187 resolved as shift
WARNING: shift/reduce conflict for ID in state 187 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 187 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 187 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 187 resolved as shift
WARNING: shift/reduce conflict for IF in state 187 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 187 resolved as shift
WARNING: shift/reduce conflict for FOR in state 187 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 187 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 187 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 187 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 188 resolved as shift
WARNING: shift/reduce conflict for COUT in state 188 resolved as shift
WARNING: shift/reduce conflict for CIN in state 188 resolved as shift
WARNING: shift/reduce conflict for ID in state 188 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 188 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 188 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 188 resolved as shift
WARNING: shift/reduce conflict for IF in state 188 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 188 resolved as shift
WARNING: shift/reduce conflict for FOR in state 188 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 188 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 188 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 188 resolved as shift
